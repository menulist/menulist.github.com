{"version":3,"sources":["webpack:///2.build.js","webpack:///./src/App.vue","webpack:///src/lib/tree.vue","webpack:///./src/lib/branch.vue","webpack:///./src/lib/arrow/iconfont.eot","webpack:///src/lib/branch.vue","webpack:///./node_modules/_css-loader@0.28.11@css-loader/lib/url/escape.js","webpack:///./src/lib/index.js","webpack:///./src/lib/tree.vue","webpack:///./src/lib/tree.vue?434c","webpack:///./src/lib/tree.vue?eecf","webpack:///./src/lib/branch.vue?826a","webpack:///./src/lib/branch.vue?ed10","webpack:///./src/lib/arrow/iconfont.css","webpack:///./src/lib/arrow/iconfont.ttf","webpack:///./src/lib/arrow/iconfont.svg","webpack:///./src/lib/arrow.json","webpack:///./src/lib/branch.vue?d79d","webpack:///./src/lib/tree.vue?71fd","webpack:///src/App.vue","webpack:///./src/App.vue?6335","webpack:///./src/App.vue?ccdc","webpack:///./src/listdata.json","webpack:///./src/App.vue?f31f"],"names":["webpackJsonp","345","module","__webpack_exports__","__webpack_require__","injectStyle","ssrContext","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_script_index_0_App_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_2_vue_loader_lib_template_compiler_index_id_data_v_7b1c19f1_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_template_index_0_App_vue__","normalizeComponent","__vue_styles__","Component","348","__WEBPACK_IMPORTED_MODULE_0__branch__","components","Branch","name","data","clickBranchIndex","props","methods","getClickBranchIndex","index","this","349","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_script_index_0_branch_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_2_vue_loader_lib_template_compiler_index_id_data_v_00086115_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_template_index_0_branch_vue__","350","exports","p","351","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","__WEBPACK_IMPORTED_MODULE_1__arrow_json__","__WEBPACK_IMPORTED_MODULE_1__arrow_json___default","n","_typeof","Symbol","iterator","obj","constructor","prototype","control","animationTime","branchLevel","default","depth","listData","open","openOnly","indent","arrow","arrowSize","arrowLeft","animation","eventArea","MouseOverBranch","parameter","$listMouseOver","clickBranch","isNaN","parseInt","doRotate","doAnimation","getChildBranchIndex","doAnimation2","setControl","$listClick","$emit","document","getElementById","push","elBox","style","display","apply","_this","enterLeave","reverse","setTimeout","elBranch","className","replace","_this2","branchDisplay","_this3","elarrow","transition","transform","getArrow","el","$set","branchStyle","id","branchOpenStyle","branchCloseStyle","branchIfShow","parentIndex","toString","split","slice","join","parentControl","branchClassName","branchClass","theId","theChildren","theData","children","substring","str","indexOf","a","arrowCloseStyle","arrowOpenStyle","arrowCloseClassName","arrowOpenClassName","branchArrowStyle","elIndex","arrowStyle","cssText","branchArrowClassName","arrowClass","branchSpanStyle","icon","theStyle","branchAnimationStyle","animationOpenStyle","animationCloseStyle","branchBoxStyle","boxStyle","computed","brancharrowBgStyle","Math","abs","branchIconStyle","created","352","url","test","353","__WEBPACK_IMPORTED_MODULE_0__tree__","tree","install","Vue","o","window","LTree","extend","listtree","propsData","$mount","354","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_script_index_0_tree_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_2_vue_loader_lib_template_compiler_index_id_data_v_b69eafe4_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_template_index_0_tree_vue__","355","content","locals","356","357","358","359","escape","360","361","362","arrow1","arrow2","arrow3","arrow4","arrow5","arrow6","arrow7","arrow8","arrow9","arrow10","363","render","_vm","_h","$createElement","_c","_self","_l","item","key","class","attrs","data-index","on","click","$event","preventDefault","mouseover","staticClass","undefined","_e","_v","_s","sendClickBranchIndex","staticRenderFns","esExports","364","365","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_1__lib__","__WEBPACK_IMPORTED_MODULE_2__listdata_json__","__WEBPACK_IMPORTED_MODULE_2__listdata_json___default","use","r","368","369","370","371","_m"],"mappings":"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","file":"2.build.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 345:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_script_index_0_App_vue__ = __webpack_require__(365);\n/* empty harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_2_vue_loader_lib_template_compiler_index_id_data_v_7b1c19f1_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_template_index_0_App_vue__ = __webpack_require__(371);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(368)\n}\nvar normalizeComponent = __webpack_require__(130)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_script_index_0_App_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_2_vue_loader_lib_template_compiler_index_id_data_v_7b1c19f1_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_template_index_0_App_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 348:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__branch__ = __webpack_require__(349);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* eslint-disable spaced-comment */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    components: {\n        Branch: __WEBPACK_IMPORTED_MODULE_0__branch__[\"a\" /* default */]\n    },\n    name: 'mytree',\n    data: function data() {\n        return {\n            clickBranchIndex: '' // -----------被点击的分支index，当用户点击branch时赋值\n        };\n    },\n\n    props: ['listData', 'open', 'openOnly', 'indent', 'arrow', 'arrowLeft', 'arrowSize', 'animation', 'eventArea'],\n    methods: {\n        getClickBranchIndex: function getClickBranchIndex(index) {\n            this.clickBranchIndex = index;\n        }\n        // /* createList 函数把从外部读取的数组转化为树形结构，x为代表目录信息的数组，parent为目录的父元素，t为中介参数，用来传递arr的值，arr的值包含了目录在树状结构中所处级别和位置的信息 */\n        // createList (x, parent, t = []) {\n        //   let _this = this\n        //   if (x.length > 0) {\n        //     /* 设定arr的值，使arr的长度和目录在树状结构中所处级别对应，arr内元素的值和目录位置对应。比如arr值为[0,3]时，表示该目录处于第一大类（arr第一个元素值为0）第四个分类（arr第二个元素值为3），目录的级别为第二小分类（arr长度为2）。arr值为[2]时，表示该目录处于第三大类，目录级别为大类。知道目录所处级别就可以为不同级别的目录设定不同的样式 */\n        //     let arr = []\n\n        //     /* 通过循环设定arr的值等于t，但不能通过arr=t来设定，这样设定的话就把arr的值和t的值绑定，改变其中一个的值就会改变另一个的值，这不是我们想要的 */\n        //     for (let k = 0; k < t.length; k++) {\n        //       arr[k] = t[k]\n        //     }\n        //     /* 每次执行 createList 函数的时候都将arr的长度增加1（创建下一级目录时都要执行 createList 函数），从而达到使arr.length与目录级别一致的目的*/\n        //     arr.push(0)\n\n        //     /* ellist收集了所有当前级别目录所在div，当需要改变所有目录样式的时候可以通过循环ellist来设定每个目录的样式 ，allellist则是所有目录所在div的集合，通过循环allellist可获取非本级别的目录*/\n        //     let ellist = []\n\n        //     /* 根据x中的各元素创建树状目录及其属性 */\n        //     for (let n = 0; n < x.length; n++) {\n        //       /* 目录展开或关闭：当目录样式名称中包含openr表示该目录是展开的，当目录样式名称中包含closer表示该目录是关闭的。反过来当要展开目录时则将目录样式添加openr，并删除closer。当要关闭目录时则将目录样式添加closer，并删除openr。 */\n        //       let openr = ' titleopen'\n        //       let closer = ' titleclose'\n\n        //       /* 创建目录 */\n        //       let link\n        //       let par = document.createElement('div')\n        //       let arrowDiv = document.createElement('div')\n        //       par.appendChild(arrowDiv)\n        //       let node = document.createTextNode(x[n].name)\n        //       if (!x[n].childer || x[n].childer.length === 0) {\n        //         link = document.createElement('a')\n        //         link.appendChild(node)\n        //         link.setAttribute('href', x[n].router)\n        //         par.appendChild(link)\n        //       } else {\n        //         par.appendChild(node)\n        //       }\n        //       par.style.paddingLeft = this.indentLetter + 10 + 'px'\n        //       par.style.marginBottom = this.branchSpace + 'px'\n\n        //       let arrowDivClassName = 'arrowDiv'\n        //       /* 当this.ifarrow为true表示目录前要带有图标，则将图标div显示，并且根据customarrow值判断是否使用自定义图标，使用自定义图标则图标div使用className为coutomarrowDivOpen或者coutomarrowDivClose，不使用自定义图标则图标div使用className为arrowDivOpen或者arrowDivClose */\n        //       if (this.ifarrow) {\n        //         arrowDiv.style.display = ''\n        //         if (_this.customarrow.length === 0) {\n        //           arrowDivClassName = 'arrowDiv'\n        //         } else {\n        //           arrowDivClassName = 'coutomarrowDiv'\n        //         }\n        //       } else { // 否则表示目录前不带有图标则将图标div隐藏\n        //         arrowDiv.style.display = 'none'\n        //       }\n\n        //       /* 当open等于1时，设定所有目录初始状态都是展开的 */\n        //       if (_this.open === 1) {\n        //         par.className = 'par' + openr\n        //         arrowDiv.className = arrowDivClassName + 'Open'\n        //         if (_this.customarrow.length !== 0) {\n        //           arrowDiv.style.backgroundImage = 'url(' + _this.customarrow[1] + ')'\n        //           arrowDiv.style.backgroundRepeat = 'no-repeat'\n        //           arrowDiv.style.backgroundPosition = 'center center'\n        //         }\n        //       } else { // 当open不等于1时，设定所有目录初始状态都是关闭的\n        //         par.className = 'par' + closer\n        //         arrowDiv.className = arrowDivClassName + 'Close'\n        //         if (_this.customarrow.length !== 0) {\n        //           arrowDiv.style.backgroundImage = 'url(' + _this.customarrow[0] + ')'\n        //           arrowDiv.style.backgroundRepeat = 'no-repeat'\n        //           arrowDiv.style.backgroundPosition = 'center center'\n        //         }\n        //       }\n\n        //       /* 为每个目录添加一个' treeBranch' + arr.length 样式，即给一级目录添加 treeBranch1 样式，给二级目录添加 treeBranch2 样式，给三级目录添加 treeBranch3 样式……，使得每级目录可以从外观上区别开来，并且 treeBranch 样式可以在插件外自定义*/\n        //       par.className = par.className + ' treeBranch' + arr.length\n\n        //       /* 每个目录下都有个box，其所有子目录都在box中 */\n        //       let box = document.createElement('div')\n        //       parent.appendChild(par)\n        //       parent.appendChild(box)\n\n        //       /* 设置子目录左边框相对于父目录左边框的缩进距离 */\n        //       box.style.paddingLeft = this.indentarrow + 'px'\n\n        //       /* child等于1的时候表示该目录下还有子目录，child等于0时表示该目录为底目录，下面已经没有子目录了。点击底目录可打开新的页面内容，点击非底目录则显示或隐藏下面的子目录 */\n        //       let child\n        //       if (x[n].childer && x[n].childer.length > 0) {\n        //         child = 1\n        //       } else {\n        //         child = 0\n        //         arrowDiv.style.display = 'none'\n        //       }\n\n        //       /* 当open不等于1时隐藏box，即隐藏子目录，换句话说就是关闭所有目录 */\n        //       if (_this.open !== 1) {\n        //         box.style.display = 'none'\n        //       }\n        //       /* 当open等于3或4时，展开一级目录（arr.length与目录级别一致）*/\n        //       if ((_this.open === 3 || _this.open === 4) && arr.length === 1) {\n        //         par.className = par.className.replace(closer, openr)\n        //         arrowDiv.className = arrowDivClassName + 'Open'\n        //         if (_this.customarrow.length !== 0) {\n        //           arrowDiv.style.backgroundImage = 'url(' + _this.customarrow[1] + ')'\n        //           arrowDiv.style.backgroundRepeat = 'no-repeat'\n        //           arrowDiv.style.backgroundPosition = 'center center'\n        //         }\n        //         box.style.display = ''\n        //         if (_this.open === 4 && arr.length === 1) {\n        //           arrowDiv.style.display = 'none'\n        //         }\n        //       }\n\n        //       /* ------------------------点击事件--------------------------- */\n        //       par.onclick = function () {\n        //         /* 当open等于2并且当前被点击的目录为关闭状态的时候关闭所有的目录，为展开当前目录做准备（因为open等于2时在同一时间只允许展开一个目录） */\n        //         if (_this.open === 2 && par.className.indexOf(closer) !== -1) {\n        //           for (let k = 0; k < ellist.length; k++) {\n        //             ellist[k].par.className = ellist[k].par.className.replace(openr, closer)\n        //             ellist[k].arrowDiv.className = arrowDivClassName + 'Close'\n        //             if (_this.customarrow.length !== 0) {\n        //               ellist[k].arrowDiv.style.backgroundImage = 'url(' + _this.customarrow[0] + ')'\n        //               ellist[k].arrowDiv.style.backgroundRepeat = 'no-repeat'\n        //               ellist[k].arrowDiv.style.backgroundPosition = 'center center'\n        //             }\n        //             ellist[k].box.style.display = 'none'\n        //           }\n        //         }\n\n        //         /* 当该目录为展开状态时，点击后闭合，当该目录为闭合状态时，点击后展开，但open等于4并且被点击的目录为一级目录时点击无效 */\n        //         if (_this.open !== 4 || arr.length > 1) {\n        //           box.style.display = box.style.display === 'none' ? '' : 'none'\n        //           if (par.className.indexOf(openr) !== -1) {\n        //             par.className = par.className.replace(openr, closer)\n        //             arrowDiv.className = arrowDivClassName + 'Close'\n        //             if (_this.customarrow.length !== 0) {\n        //               arrowDiv.style.backgroundImage = 'url(' + _this.customarrow[0] + ')'\n        //               arrowDiv.style.backgroundRepeat = 'no-repeat'\n        //               arrowDiv.style.backgroundPosition = 'center center'\n        //             }\n        //           } else if (par.className.indexOf(closer) !== -1) {\n        //             par.className = par.className.replace(closer, openr)\n        //             arrowDiv.className = arrowDivClassName + 'Open'\n        //             if (_this.customarrow.length !== 0) {\n        //               arrowDiv.style.backgroundImage = 'url(' + _this.customarrow[1] + ')'\n        //               arrowDiv.style.backgroundRepeat = 'no-repeat'\n        //               arrowDiv.style.backgroundPosition = 'center center'\n        //             }\n        //           }\n        //         }\n\n        //         /* 当被点击的目录为底层目录时使得该目录及其中的一个祖先目录成选中状态 */\n        //         if (!x[n].childer || x[n].childer.length === 0) {\n        //           _this.router.push(x[n].router)\n        //           /* 通过循环allellist里的所有元素查找被点击目录的所有祖先目录，然后通过checkedparents值来确定一级祖先目录还是二级祖先目录设定为选中状态 */\n        //           for (let l = 0; l < _this.allellist.length; l++) {\n        //             if (_this.allellist[l].child === 0) {\n        //               _this.allellist[l].par.className = _this.allellist[l].par.className.replace(' checkedself', '')\n        //             } else if (_this.checkedparents === 1) {\n        //               if (_this.allellist[l].arr.length === 1) {\n        //                 /* 当allellist[l]为一级目录（即allellist[l].arr.length === 1）时，点击它下面的子孙目录时allellist[l]的样式才会改变。 */\n        //                 _this.allellist[l].par.className = _this.allellist[l].par.className.replace(' checkedparents', '')\n        //                 if (_this.allellist[l].arr[0] === arr[0]) {\n        //                   /* 通过判断allellist[l].arr中第一个元素和当前arr第一个元素是否相等来判断allellist[l]是否当前点击的这个目录的祖先目录，如果是则改变allellist[l]的样式 */\n        //                   _this.allellist[l].par.className = _this.allellist[l].par.className + ' checkedparents'\n        //                 }\n        //               }\n        //             } else if (_this.checkedparents === 2) {\n        //               if (_this.allellist[l].arr.length === 2) {\n        //                 /* 当allellist[l]为二级目录（即allellist[l].arr.length === 2）时，点击它下面的子孙目录时allellist[l]的样式才会改变 */\n        //                 _this.allellist[l].par.className = _this.allellist[l].par.className.replace(' checkedparents', '')\n        //                 if (_this.allellist[l].arr[0] === arr[0] && _this.allellist[l].arr[1] === arr[1]) {\n        //                   /* 通过判断allellist[l].arr中前2个元素和当前arr前2个元素是否相等来判断allellist[l]是否当前点击的这个目录的祖先目录，如果是则改变allellist[l]的样式 */\n        //                   _this.allellist[l].par.className = _this.allellist[l].par.className + ' checkedparents'\n        //                 }\n        //               }\n        //             }\n        //           }\n        //           /* 改变被点击的底层目录自身为选中状态 */\n        //           par.className = par.className + ' checkedself'\n        //         }\n        //       }\n        //       /* ----------------------------------------------------------- */\n\n        //       /* 将每个目录所在div信息收集起来，这里arr必须用一个中介（thearr）来转一下，否则后面push的arr值会覆盖前面的arr值 */\n        //       /* ellist收集的是本级目录信息，因为创建每级目录时都会执行一次createList，而每次执行createList都会重新定义ellist，所以每个ellist收集的都是本次执行函数createList时push给ellist的值 */\n        //       /* allellist收集的是所有目录的信息，因为allellist是函数createList外面的数据，每次push给allellist的值都保存在allellist里面 */\n        //       let thearr = []\n        //       for (let kk = 0; kk < arr.length; kk++) {\n        //         thearr[kk] = arr[kk]\n        //       }\n        //       let theel = {\n        //         par,\n        //         arrowDiv,\n        //         box,\n        //         child,\n        //         arr: thearr\n        //       }\n        //       ellist.push(theel)\n        //       _this.allellist.push(theel)\n\n        //       /* 如果当前创建的目录还有子目录则再执行函数createList来创建子目录，*/\n        //       if (x[n].childer && x[n].childer.length > 0) {\n        //         _this.createList(x[n].childer, box, arr)\n        //       } else {\n        //         par.className = 'par title' + arr.length\n        //       }\n\n        //       /* 进入下次循环前将arr最后一个元素值加1，使得arr每个元素值与对应目录所处位置一致：元素值为0表示对应的目录在同级目录中为第一个目录，元素值为1表示对应的目录在同级目录中为第二个目录 */\n        //       /* arr.length则与对应目录所处级别一致：arr.length为1表示该目录为一级目录，arr.length为2表示该目录为二级目录 */\n        //       arr[arr.length - 1]++\n        //     }\n        //   }\n        // }\n\n    }\n});\n\n/***/ }),\n\n/***/ 349:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_script_index_0_branch_vue__ = __webpack_require__(351);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_2_vue_loader_lib_template_compiler_index_id_data_v_00086115_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_template_index_0_branch_vue__ = __webpack_require__(363);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(357)\n}\nvar normalizeComponent = __webpack_require__(130)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_script_index_0_branch_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_2_vue_loader_lib_template_compiler_index_id_data_v_00086115_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_template_index_0_branch_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 350:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"iconfont.eot?a5f8db96505701301350ff3d0cd3948d\";\n\n/***/ }),\n\n/***/ 351:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__branch__ = __webpack_require__(349);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__arrow_json__ = __webpack_require__(362);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__arrow_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__arrow_json__);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'branch',\n  data: function data() {\n    return {\n      control: {}, // -----------------控制各个branch,box,arrow的展开或闭合状态\n      animationTime: 0 // -----------动画执行时间\n    };\n  },\n\n  components: {\n    Branch: __WEBPACK_IMPORTED_MODULE_0__branch__[\"a\" /* default */]\n  },\n  props: {\n    branchLevel: { // ---------分支级别，顶级分支为x，二级分支为x-x，三级分支为x-x-x，以此类推，系统会自动分别一级一级往下传递\n      default: 0\n    },\n    depth: { // ------------分支级别的深度，一级分支深度为0，二级分支深度为1，三级分支深度为2，以此类推，系统会自动分别一级一级往下传递\n      default: 0\n    },\n    clickBranchIndex: '', // -----------被点击的分支index，用户在分支上点击（处于组件branch.vue中）后会触发sendClickBranchIndex事件，上一级组件（上一级branch.vue）监听到sendClickBranchIndex后再运行gitClickBranchIndex事件，gitClickBranchIndex事件里又触发sendClickBranchIndex事件往上传递，一直到组件tree.vue监听到sendClickBranchIndex事件后更改data中的clickBranchIndex，tree.vue下所有的组件都会接受到clickBranchIndex的更改\n    // -------------------------------------------以上props内容用户不能控制，以下props用户可以设置-------------------------------\n    listData: { // -----------json格式的数据，每个分支目录有name,parameter,arrow,children四个个字段，name为分支的文字内容（必须有）。parameter为点击分支时跳转的路由地址,如果不跳转可省略parameter字段。arrow为该分支前的图标地址（包括展开时和闭合时的图标，所以arrow是个数组），如果使用默认图标arrow字段可以省略。children为该分支的下级分支，如果没有下级分支children字段也可以省略\n      default: function _default() {\n        return [];\n      }\n    },\n    open: { // --设置初始状态下各分支展开或闭合情况:0为全部闭合，1为全部展开；2第一个分支展开其他都闭合，且同级分支始终只能有一个展开；3除了一级分支展开，其他分支全都闭合；4除了一级分支展开，其他分支全都闭合，并且一级分支不能闭合，一级分支没有图标\n      default: 1\n    },\n    openOnly: {\n      default: 0\n    },\n    indent: { // -----子级分支相对父级分支的缩进距离\n      default: 24\n    },\n    arrow: {\n      default: 1 // ------arrow箭头图标，等于0时表示用户不需要图标，为大于0的整数时为系统自带的图标，为数组时为自定义图标（Font-Awesome和阿里巴巴图标）作为图标，数组第一个元素为闭合时图标，第二个元素为展开时图标或者是闭合图标需要旋转的角度，当数组内元素为图片地址时，用自定义图片做图标\n    },\n    arrowSize: { // -----设置箭头图标大小，单位为 px\n      default: 25\n    },\n    arrowLeft: { // -----设置箭头图标边距，如果为正整数表示距离左边的距离，如果为负数表示距离右边的距离，单位为 px\n      default: 10\n    },\n    animation: { // ---animation设为false时不使用动画\n      default: 1\n    },\n    eventArea: { // ----事件区域，eventArea有2个值分别为'line'和'content'，值为'line'时表示鼠标点击或经过菜单分支所在行时触发Vue.prototype.$listClick和Vue.prototype.$listMouseOver；值为'content'时表示鼠标点击或经过菜单分支文字内容时触发Vue.prototype.$listClick和Vue.prototype.$listMouseOver。\n      default: 'line'\n    }\n  },\n  methods: {\n    MouseOverBranch: function MouseOverBranch(parameter, eventArea) {\n      // -----------------------------鼠标经过 branch-------------------------------\n      if (eventArea !== this.eventArea) return false;\n      if (typeof this.$listMouseOver === \"function\") {\n        this.$listMouseOver(parameter); // ----鼠标经过branch时传递parameter给插件外的组件，插件外的组件通过给Vue的原型添加方法$listMouseOver 来获取参数parameter，并进行一系列的操作\n      }\n    },\n    clickBranch: function clickBranch(index, parameter, eventArea) {\n      // -----------------------------branch 点击事件--------------------------------\n      if (eventArea !== this.eventArea) return false;\n      if (this.control['lt-branch_' + index][0] === 'always') return false;\n      /* 如果没有动画，那么点击branch时直接就修改control值，否则就在执行完动画后在doAnimation中修改control值 */\n      if (!isNaN(parseInt(this.animation)) && this.animation > 0) {\n        // this.doAnimation(this.getChildBranchIndex(index), index)\n        this.doRotate(index);\n        if (this.animation === 1) {\n          this.doAnimation(this.getChildBranchIndex(index), index);\n        } else if (this.animation === 2) {\n          this.doAnimation2(this.getChildBranchIndex(index), index);\n        }\n      } else {\n        this.setControl(index);\n      }\n      if (typeof this.$listClick === \"function\") {\n        this.$listClick(parameter); // ----branch被点击时传递parameter给插件外的组件，插件外的组件通过给Vue的原型添加方法$listClick来获取参数parameter，并进行一系列的操作\n      }\n\n      if (parameter && parameter !== '') {\n        this.$emit('sendClickBranchIndex', index);\n      }\n      return false;\n    },\n    getChildBranchIndex: function getChildBranchIndex(index) {\n      // ----- 获取子分支index，用于动画展现（只获取显示的子分支，隐藏状态的不获取）\n      var n = 1;\n      var arr = [];\n      while (document.getElementById('lt-branch_' + index + '-' + n)) {\n        arr.push(index + '-' + n);\n        var elBox = document.getElementById('lt-branch-animation_' + index + '-' + n);\n        if (elBox && elBox.style.display !== 'none') {\n          arr.push.apply(arr, _toConsumableArray(this.getChildBranchIndex(index + '-' + n)));\n        }\n        n++;\n      }\n      return arr;\n    },\n    doAnimation: function doAnimation(arr, index) {\n      var _this = this;\n\n      // ----------执行动画\n      var elBox = document.getElementById('lt-branch-animation_' + index);\n\n      if (elBox) {\n        (function () {\n          elBox.style.display = '';\n          var enterLeave = void 0;\n          if (_this.control['lt-branch_' + index][0] === 'open' || _this.control['lt-branch_' + index][0] === 1) {\n            // --当前为展开状态则将要执行的是收缩动画\n            arr = arr.reverse(); // -----反转数组，即动画从最后一个子分支开始执行\n            enterLeave = 'leave';\n            setTimeout(function () {\n              _this.setControl(index);\n              elBox.style.display = 'none';\n            }, arr.length * 50 + 200);\n          } else if (_this.control['lt-branch_' + index][0] === 'close' || _this.control['lt-branch_' + index][0] === 0) {\n            enterLeave = 'enter';\n            _this.setControl(index);\n            elBox.style.display = '';\n          }\n\n          var _loop = function _loop(n) {\n            var elBranch = document.getElementById('lt-branch_' + arr[n]);\n            if (elBranch) {\n              elBranch.className = elBranch.className.replace(' branch-enter-start', '').replace(' branch-leave-start', '').replace(' branch-enter-end', '').replace(' branch-leave-end', '');\n              if (enterLeave === 'leave') elBranch.className += ' branch-leave-start'; // ----展开的动画起始样式在这里，为了避免display的干扰收缩的动画样式必须在display改变之后\n              elBranch.style.display = enterLeave === 'leave' ? 'block' : 'none';\n              if (typeof arr[n] === 'string') {\n                setTimeout(function () {\n                  // -----相邻的分支之间执行动画相隔80微秒\n                  if (enterLeave === 'leave') {\n                    elBranch.className += ' branch-leave-end';\n                    setTimeout(function () {\n                      elBranch.style.display = 'none'; // ---用setTimeout是因为必须在展开动画执行完后才隐藏分支，同时也能避免display的改变对展开动画的干扰\n                    }, 300);\n                  } else if (enterLeave === 'enter') {\n                    elBranch.style.display = 'block';\n                    elBranch.className += ' branch-enter-start'; // ----- 收缩的动画放在这里开始是为了避免display的干扰\n                    setTimeout(function () {\n                      elBranch.className += ' branch-enter-end'; // ----这里如果不用setTimeout的话css3动画不能执行\n                    }, 100);\n                  }\n                }, 50 * n);\n              }\n            }\n          };\n\n          for (var n = 0; n < arr.length; n++) {\n            _loop(n);\n          }\n        })();\n      }\n    },\n    doAnimation2: function doAnimation2(arr, index) {\n      var _this2 = this;\n\n      // ----------执行动画\n      var elBox = document.getElementById('lt-branch-animation_' + index);\n\n      if (elBox) {\n        (function () {\n          elBox.style.display = '';\n          var branchDisplay = void 0;\n          if (_this2.control['lt-branch_' + index][0] === 'open' || _this2.control['lt-branch_' + index][0] === 1) {\n            // --当前为展开状态则将要执行的是收缩动画\n            setTimeout(function () {\n              _this2.setControl(index);\n            }, arr.length * 30 + 200);\n            branchDisplay = 'none';\n          } else if (_this2.control['lt-branch_' + index][0] === 'close' || _this2.control['lt-branch_' + index][0] === 0) {\n            arr = arr.reverse();\n            branchDisplay = 'block';\n            _this2.setControl(index);\n          }\n\n          var _loop2 = function _loop2(n) {\n            var elBranch = document.getElementById('lt-branch_' + arr[n]);\n            elBranch.style.display = branchDisplay === 'none' ? 'block' : 'none';\n            if (elBranch) {\n              if (typeof arr[n] === 'string') {\n                setTimeout(function () {\n                  // -----相邻的分支之间执行动画相隔30微秒\n                  elBranch.style.display = branchDisplay;\n                }, 30 * n);\n              }\n            }\n          };\n\n          for (var n = 0; n < arr.length; n++) {\n            _loop2(n);\n          }\n        })();\n      }\n    },\n    doRotate: function doRotate(index) {\n      var _this3 = this;\n\n      // -------图标旋转动画\n      var elarrow = document.getElementById('lt-branch-arrow_' + index);\n      if (elarrow) {\n        elarrow.style.transition = 'all .3s';\n        if (this.control['lt-branch_' + index][0] === 'open' || this.control['lt-branch_' + index][0] === 1) {\n          // --当前为展开状态则将要执行的是收缩动画\n          setTimeout(function () {\n            elarrow.style.transform = elarrow.style.transform.replace(/rotate\\(\\d*deg\\)/, '');\n            elarrow.style.transform += ' rotate(0deg)';\n          }, 0);\n        } else if (this.control['lt-branch_' + index][0] === 'close' || this.control['lt-branch_' + index][0] === 0) {\n          setTimeout(function () {\n            elarrow.style.transform = elarrow.style.transform.replace(/rotate\\(\\d*deg\\)/, '');\n            elarrow.style.transform += ' rotate(' + parseInt(_this3.getArrow(index)[1]) + 'deg)';\n          }, 0);\n        }\n      }\n    },\n    setControl: function setControl(index) {\n      // -----设置this.control['lt-branch_' + index][0]的值，该值决定branch是展开还是闭合\n      if (this.openOnly === 1) {\n        // -------openOnly为1时通过循环将所有同级别的branch都关闭确保同级别只能展开一个分支\n        var n = 1;\n        var el = void 0;\n        do {\n          if (this.branchLevel + n !== index) {\n            this.control['lt-branch_' + (this.branchLevel + n)][0] = 'close';\n            // this.renewStyle([this.branchLevel + n]) // -------------------------这里renewStyle刷新的是所有同级的分支样式，函数结尾的renewStyle刷新的只是被点击的分支的style\n          }\n          n++;\n          el = document.getElementById('lt-branch_' + (this.branchLevel + n));\n        } while (el);\n      }\n\n      if (this.control['lt-branch_' + index][0] === 'open' || this.control['lt-branch_' + index][0] === 1) {\n        this.$set(this.control, 'lt-branch_' + index, ['close']);\n      } else if (this.control['lt-branch_' + index][0] === 'close' || this.control['lt-branch_' + index][0] === 0) {\n        this.$set(this.control, 'lt-branch_' + index, ['open']);\n      }\n    },\n    getClickBranchIndex: function getClickBranchIndex(index) {\n      // ---------------------------------获取当前点击的branch的index，\n      this.$emit('sendClickBranchIndex', index); // ---------并把该index值通过自定义事件传给父组件\n    },\n    branchStyle: function branchStyle(id) {\n      // --------branch的样式\n      var branchStyle = '';\n      var arrowLeft = parseInt(this.arrowLeft);\n      if (arrowLeft > 0) branchStyle = 'padding-left: ' + (this.indent * this.depth + arrowLeft + this.arrowSize + 10) + 'px;';\n      if (this.control['lt-branch_' + id][0] === 'open' || this.control['lt-branch_' + id][0] === 1 || this.control['lt-branch_' + id][0] === 'always') {\n        branchStyle += this.branchOpenStyle;\n      } else {\n        branchStyle += this.branchCloseStyle;\n      }\n      return 'position: relative;\\n              text-align: left;\\n              ' + branchStyle;\n    },\n    branchIfShow: function branchIfShow(index) {\n      if (this.depth > 0) {\n        // -------一级分支永远都应该显示且一级分支没有父级分支，所以这里把一级分支排除不进行判断\n        var parentIndex = this.branchLevel.toString().split('-').slice(0, -1).join('-');\n        if (this.parentControl['lt-branch_' + parentIndex][0] === 'close' || this.parentControl['lt-branch_' + parentIndex][0] === 0) {\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        return true;\n      }\n    },\n    branchClassName: function branchClassName(id) {\n      // ------------branch的className\n      var branchClass = '';\n      var theId = id.toString();\n      var theChildren = '';\n      var theData = '';\n\n      if (this.depth === 0) {\n        // --获取branch的children值，如果该branch没有children(即没有子分支)，就给它加上lt-branch_level_0样式\n        theData = this.listData[id - 1];\n        if (theData.children) theChildren = theData.children;\n      } else {\n        theData = this.listData[theId.replace(this.branchLevel, '') - 1];\n        if (theData.children) theChildren = theData.children;\n      }\n\n      branchClass = 'lt-branch lt-branch_level_' + (this.depth + 1); // --------添加常规分支className和当前级别的className\n      if (theChildren.length === 0) {\n        // ------如果branch没有子分支，就给branch加上 lt-branch_level_0 样式\n        branchClass += ' lt-branch_level_0';\n      }\n      if (theId.toString() === this.clickBranchIndex.toString().substring(0, theId.length)) {\n        // ------判断是否为当前active状态branch的祖先，如果是就加上active状态的className\n        branchClass += ' lt-branch_level_' + (this.depth + 1) + '_active';\n      }\n      /* 用被点击分支index减掉当前分支的index剩余部分包含一个\"-\"，即表示当前分支仅仅比被点击分支高一级（如果高一级以上，那么replace后剩余部分一定会包含多个\"-\"），为了消除特殊index带来的buger，在判断的时候clickBranchIndex和theId前都加了一个字母，并且最后得加一个判断：\"-\"在第一个位置 */\n      var str = ('a' + this.clickBranchIndex.toString()).replace('a' + theId.toString(), '');\n      if (str.split('-').length - 1 === 1 && str.indexOf('-') === 0) {\n        branchClass += ' lt-branch_active_parent';\n      }\n      if (theId.toString() === this.clickBranchIndex.toString()) {\n        // ------判断是否为当前active状态branch，如果是就加上active状态的className\n        branchClass += ' lt-branch_active';\n      }\n      return branchClass;\n    },\n    getArrow: function getArrow(index) {\n      // ---------图标来源（权重：listData > 参数arrow > arrow.json。如果一个branch没有子级，那么这个branch没有图标，但如果listData中该branch包含arrow属性，那么这个branch哪怕没有子级它也有自己的图标）\n      /* 从listData读取arrow */\n      // let arr = index.toString().split('-')\n      // let privatearrow = this.listData[arr[arr.length - 1] - 1].arrow\n      // if (privatearrow !== undefined && privatearrow.length === 2) {\n      //   return privatearrow\n      // }\n      /* 从用户输入的参数arrow 和 arrow.json（默认）读取arrow */\n      var arrow = this.arrow;\n      if (arrow === '' || arrow === 'undefined') arrow = 1;\n      if (!isNaN(parseInt(arrow))) {\n        if (arrow === 0 || arrow === false) return false; // -----arrow等于0或者false时不显示箭头图标\n        arrow = __WEBPACK_IMPORTED_MODULE_1__arrow_json___default.a['arrow' + arrow]; // ----------把arrow.json里的数据赋予arrow\n      }\n\n      return arrow; // -----不管用户是使用系统默认图标、自定义图片还是使用第三方图标或者在listData中定义图标，arrow都为数组，数组第一个元素为展开时的图标，第二个元素为闭合时图标（数组元素可能是图片地址，也可能是代表第三方图标的className）\n    },\n    arrowCloseStyle: function arrowCloseStyle(index) {\n      // -----箭头图标闭合时的样式\n      if (this.getArrow(index)[0].indexOf('/') > -1) {\n        // -----------this.getArrow中的元素包含“/”说明用户使用自定义图片作为图标\n        return 'position: absolute;\\n                top: 0;\\n                left: 0;\\n                bottom: 0;\\n                right: 0;\\n                font-size:' + this.arrowSize + 'px;\\n                background: url(\\'' + this.getArrow(index)[0] + '\\') center no-repeat;';\n      } else {\n        // ---------------------------------------------此时用户使用默认图标或第三方图标库来作为图标\n        return 'position: absolute;\\n                font-size:' + this.arrowSize + 'px;\\n                top: 50%;\\n                transform: translateY(-50%);';\n      }\n    },\n    arrowOpenStyle: function arrowOpenStyle(index) {\n      // -----箭头图标展开时的样式\n      if (isNaN(parseInt(this.getArrow(index)[1]))) {\n        // ---如果this.getArrow(index)第二个元素不是纯数字，它一定是与第一个元素代表完全不一样的图片或className。\n        if (this.getArrow(index)[0].indexOf('/') > -1) {\n          // -----------this.getArrow中的元素包含“/”说明用户使用自定义图片作为图标\n          return 'position: absolute;\\n                  top: 0;\\n                  left: 0;\\n                  bottom: 0;\\n                  right: 0;\\n                  font-size: ' + this.arrowSize + 'px;\\n                  background: url(\\'' + this.getArrow(index)[1] + '\\') center no-repeat;';\n        } else {\n          // ---------------------------------------------此时用户使用默认图标或第三方图标库来作为图标\n          return 'position: absolute;\\n                  font-size:' + this.arrowSize + 'px;\\n                  top: 50%;\\n                  transform: translateY(-50%);';\n        }\n      } else {\n        // ---如果this.getArrow(index)第二个元素是纯数字，它表示与第一个元素是一样的图片或className，只是需要顺时针旋转一个角度。\n        var transform = void 0;\n        if (this.getArrow(index)[0].indexOf('/') > -1) {\n          // ----如果不是是图片格式旋转\n          transform = 'transform: rotate(' + this.getArrow(index)[1] + 'deg);';\n        } else {\n          transform = 'transform: translateY(-50%) rotate(' + this.getArrow(index)[1] + 'deg);';\n        }\n        return this.arrowCloseStyle(index) + '\\n                ' + transform;\n      }\n    },\n    arrowCloseClassName: function arrowCloseClassName(index) {\n      // ----------闭合时箭头图标层的className\n      if (!this.getArrow(index)) return '';\n      if (this.getArrow(index)[0].indexOf('/') === -1) {\n        // ---如果图标使用的不是图片（图片地址一定含有“/”）\n        return this.getArrow(index)[0];\n      }\n      return '';\n    },\n    arrowOpenClassName: function arrowOpenClassName(index) {\n      // ----------展开时箭头图标层的className\n      if (!this.getArrow(index)) return '';\n      if (isNaN(parseInt(this.getArrow(index)[1])) && this.getArrow(index)[1].toString().indexOf('/') === -1) {\n        // ---如果this.getArrow(index)第二个元素不是纯数字并且图标使用的不是图片（图片地址一定含有“/”）\n        return this.getArrow(index)[1];\n      } else if (!isNaN(parseInt(this.getArrow(index)[1]))) {\n        // ---this.getArrow(index)第二个元素是纯数字，展开时图标层的className和闭合时图标层的className应该一样，只是在设置style时旋转一定的角度就可以了（角度的度数是this.getArrow(index)）\n        return this.getArrow(index)[0];\n      }\n      return '';\n    },\n    branchArrowStyle: function branchArrowStyle(index) {\n      // ---------------------------------箭头图标的样式-------------------------\n      var elIndex = document.getElementById('lt-branch-arrow_' + index);\n      var arrowStyle = 'display:inline-block;';\n      if (this.arrow === 0) return arrowStyle;\n      if (elIndex) arrowStyle = elIndex.style.cssText;\n      if (this.clickBranchIndex !== index || this.animation === false) {\n        // ----禁止当前正处于动画状态的图标改变状态\n        if (this.control['lt-branch_' + index][0] === 'open' || this.control['lt-branch_' + index][0] === 'always' || this.control['lt-branch_' + index][0] === 1) {\n          // ----------分支展开或闭合的情况\n          arrowStyle += this.arrowOpenStyle(index);\n        } else {\n          arrowStyle += this.arrowCloseStyle(index);\n        }\n      }\n      return arrowStyle;\n    },\n    branchArrowClassName: function branchArrowClassName(index) {\n      // ---------------箭头图标的className(当使用默认图标或第三方图标库时需要设定className)-------------------\n      var arrowClass = '';\n      if (this.control['lt-branch_' + index][0] === 'open' || this.control['lt-branch_' + index][0] === 'always' || this.control['lt-branch_' + index][0] === 1) {\n        arrowClass += this.arrowOpenClassName(index);\n      } else {\n        arrowClass += this.arrowCloseClassName(index);\n      }\n\n      arrowClass += ' lt-branch-arrow lt-branch-arrow_level_' + (this.depth + 1); // --------添加常规分支图标className和当前级别图标的className\n      var theId = index.toString();\n      var theChildren = '';\n      var theData = '';\n\n      if (this.depth === 0) {\n        // --获取branch的children值，如果该branch没有children(即没有子分支)，就给它加上lt-branch_level_0样式\n        theData = this.listData[index - 1];\n        if (theData.children) theChildren = theData.children;\n      } else {\n        theData = this.listData[theId.replace(this.branchLevel, '') - 1];\n        if (theData.children) theChildren = theData.children;\n      }\n\n      if (theChildren.length === 0) {\n        // ------如果branch没有子分支，就给branch加上 lt-branch-arrow_level_0 样式\n        arrowClass += ' lt-branch-arrow_level_0';\n      }\n      if (theId.toString() === this.clickBranchIndex.toString().substring(0, theId.length)) {\n        // ------判断是否为当前active状态branch的祖先，如果是就加上active状态的className\n        arrowClass += ' lt-branch-arrow_level_' + (this.depth + 1) + '_active';\n      }\n      if (theId.toString() === this.clickBranchIndex.toString()) {\n        // ------判断是否为当前active状态branch，如果是就加上active状态的className\n        arrowClass += ' lt-branch-arrow_active';\n      }\n      /* 用被点击分支index减掉当前分支的index剩余部分包含一个\"-\"，即表示当前分支仅仅比被点击分支高一级（如果高一级以上，那么replace后剩余部分一定会包含多个\"-\"），为了消除特殊index带来的buger，在判断的时候clickBranchIndex和theId前都加了一个字母，并且最后得加一个判断：\"-\"在第一个位置 */\n      var str = ('a' + this.clickBranchIndex.toString()).replace('a' + index.toString(), '');\n      if (str.split('-').length - 1 === 1 && str.indexOf('-') === 0) {\n        arrowClass += ' lt-branch-arrow_active_parent';\n      }\n      return arrowClass;\n    },\n    branchSpanStyle: function branchSpanStyle(icon) {\n      var theStyle = '';\n      if (icon && icon !== '') theStyle = 'left:30px;';\n      return 'position:relative;\\n              ' + theStyle;\n    },\n    branchAnimationStyle: function branchAnimationStyle(id) {\n      // ----animation的样式\n      var theStyle = '';\n      if (this.control['lt-branch_' + id][0] === 'open' || this.control['lt-branch_' + id][0] === 'always' || this.control['lt-branch_' + id][0] === 1) {\n        theStyle += this.animationOpenStyle;\n      } else if (this.control['lt-branch_' + id][0] === 'close' || this.control['lt-branch_' + id][0] === 0) {\n        theStyle += this.animationCloseStyle;\n      }\n      return theStyle;\n    },\n    branchBoxStyle: function branchBoxStyle(id) {\n      // -------------------------------------box的样式-----------------------\n      return 'margin:0px;\\n              padding:0px;\\n              border:0px;\\n              ' + this.boxStyle;\n    }\n  },\n  computed: {\n    brancharrowBgStyle: function brancharrowBgStyle() {\n      // ----箭头图标背景层距离左边的距离，控制图标的位置\n      var arrowLeft = parseInt(this.arrowLeft);\n      if (arrowLeft < 0) return 'right: ' + Math.abs(arrowLeft) + 'px;';\n      return 'left: ' + (this.indent * this.depth + arrowLeft) + 'px;';\n    },\n    branchIconStyle: function branchIconStyle() {\n      // ----图标层样式（此图标层非箭头图标层，而是listData上的icon图标）\n      return 'position:absolute;\\n              display:inline-block;\\n              transform:translateY(-50%);\\n              top: 50%;';\n    },\n    branchOpenStyle: function branchOpenStyle() {\n      // ---branch展开时的样式\n      return '';\n    },\n    branchCloseStyle: function branchCloseStyle() {\n      // ---branch闭合时的样式\n      return '';\n    },\n    animationOpenStyle: function animationOpenStyle() {\n      return 'margin:0px;\\n              padding:0px;\\n              border:0px;';\n    },\n    animationCloseStyle: function animationCloseStyle() {\n      return 'margin:0px;\\n              padding:0px;\\n              border:0px;\\n              height:0px;\\n              display:none;';\n    },\n    boxStyle: function boxStyle() {\n      return '';\n    }\n  },\n  created: function created() {\n    /*\r\n    将类似于下面 control 的值赋给data中的control，这样的话，就可通过this.control.branchLevel1[0]的值来控制分支branchLevel1的展开或闭合。其中branchLevel1中的1与每个分支中的data-index相同，这样每个分支在control中都有个对应的值来控制和判断它的状态。\r\n    control: {\r\n      lt-branch_1: ['close'],\r\n      lt-branch_2: ['close'],\r\n      lt-branch_3: ['close'],\r\n    }\r\n     */\n    for (var n = 1; n < this.listData.length + 1; n++) {\n      this.$set(this.control, 'lt-branch_' + (this.branchLevel + n), ['close']); // ----------默认情况，所有branch都为闭合状态(数组第一个元素表示branch的展开或闭合状态['open'为展开，'close'为闭合]\n      this.$set(this.control, 'lt-branch-arrow_' + (this.branchLevel + n), 'show'); // ----------默认情况，所有arrow都为显示状态('show'为显示，'hidden'为隐藏)\n\n      if (this.open === 1) {\n        this.$set(this.control, 'lt-branch_' + (this.branchLevel + n), ['open']); // ----------当open值为1时，所有branch都为展开状态\n      } else if (_typeof(this.open) === 'object') {\n        /* 当open为数组时，根据当前分支所处级别以及open中与该级别对应的元素来确定当前分支是“open”、“close”还是“always”状态。其中一级分支状态对应open第一个元素值， 二级分支状态对应open第二个元素值，以此类推。如果open长度不够，那当前级别的分支状态对应open最后一个元素的值 */\n        if (this.open.length > this.depth + 1 || this.open.length === this.depth + 1) {\n          this.$set(this.control, 'lt-branch_' + (this.branchLevel + n), [this.open[this.depth]]);\n        } else {\n          this.$set(this.control, 'lt-branch_' + (this.branchLevel + n), [this.open[this.open.length - 1]]);\n        }\n      }\n      if (this.openOnly === 1 && this.control['lt-branch_' + (this.branchLevel + n)][0] !== 'always') {\n        this.$set(this.control, 'lt-branch_' + (this.branchLevel + n), ['close']);\n      }\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 352:\n/***/ (function(module, exports) {\n\nmodule.exports = function escape(url) {\n    if (typeof url !== 'string') {\n        return url\n    }\n    // If url is already wrapped in quotes, remove them\n    if (/^['\"].*['\"]$/.test(url)) {\n        url = url.slice(1, -1);\n    }\n    // Should url be wrapped?\n    // See https://drafts.csswg.org/css-values-3/#urls\n    if (/[\"'() \\t\\n]/.test(url)) {\n        return '\"' + url.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n') + '\"'\n    }\n\n    return url\n}\n\n\n/***/ }),\n\n/***/ 353:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tree__ = __webpack_require__(354);\n\nvar tree = {\n  install: function install(Vue, o) {\n    if (typeof window !== 'undefined' && window.Vue) {\n      Vue = window.Vue;\n    }\n    var LTree = Vue.extend(__WEBPACK_IMPORTED_MODULE_0__tree__[\"a\" /* default */]);\n    var listtree = new LTree({ propsData: {\n        listData: o.listData,\n        open: o.open,\n        openOnly: o.openOnly,\n        indent: o.indent,\n        arrow: o.arrow,\n        arrowSize: o.arrowSize,\n        arrowLeft: o.arrowLeft,\n        animation: o.animation,\n        eventArea: o.eventArea\n      } });\n    setTimeout(function () {\n      listtree.$mount('.listtree');\n    }, 0);\n  }\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (tree);\n\n/***/ }),\n\n/***/ 354:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_script_index_0_tree_vue__ = __webpack_require__(348);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_2_vue_loader_lib_template_compiler_index_id_data_v_b69eafe4_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_template_index_0_tree_vue__ = __webpack_require__(364);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(355)\n}\nvar normalizeComponent = __webpack_require__(130)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_script_index_0_tree_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_2_vue_loader_lib_template_compiler_index_id_data_v_b69eafe4_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_template_index_0_tree_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 355:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(356);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(129)(\"4a6dd837\", content, true, {});\n\n/***/ }),\n\n/***/ 356:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(91)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"a,a:hover{color:#000;text-decoration:none}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 357:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(358);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(129)(\"21bad3e4\", content, true, {});\n\n/***/ }),\n\n/***/ 358:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(91)(false);\n// imports\nexports.i(__webpack_require__(359), \"\");\n\n// module\nexports.push([module.i, \".iconfont{font-family:iconfont!important;font-style:normal;font-weight:400;-webkit-font-smoothing:antialiased;-webkit-text-stroke-width:.2px;-moz-osx-font-smoothing:grayscale}.lt-branch-arrow-bg{width:20px;height:20px;position:absolute;transform:translateY(-50%);top:50%}.branch-enter-start{transform:translateX(-25px);opacity:0;transition:all .3s}.branch-enter-end,.branch-leave-start{transform:translateX(0);opacity:1}.branch-leave-start{transition:all .3s}.branch-leave-end{transform:translateX(-25px);opacity:0}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 359:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar escape = __webpack_require__(352);\nexports = module.exports = __webpack_require__(91)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"@font-face{font-family:iconfont;src:url(\" + escape(__webpack_require__(350)) + \");src:url(\" + escape(__webpack_require__(350)) + \"#iefix) format(\\\"embedded-opentype\\\"),url(\\\"data:application/x-font-woff;charset=utf-8;base64,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\\\") format(\\\"woff\\\"),url(\" + escape(__webpack_require__(360)) + \") format(\\\"truetype\\\"),url(\" + escape(__webpack_require__(361)) + \"#iconfont) format(\\\"svg\\\")}.iconfont{font-family:iconfont!important;font-size:16px;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-sanjiao3:before{content:\\\"\\\\E600\\\"}.icon-shousuojiahao:before{content:\\\"\\\\E627\\\"}.icon-shousuojianhao:before{content:\\\"\\\\E628\\\"}.icon-wenjianjia:before{content:\\\"\\\\E663\\\"}.icon-tongxunguanlizhankai:before{content:\\\"\\\\E655\\\"}.icon-tongxunguanli:before{content:\\\"\\\\E656\\\"}.icon-wenjianjia1:before{content:\\\"\\\\E67F\\\"}.icon-wenjianjiafolder80:before{content:\\\"\\\\E743\\\"}.icon-wenjianjiashouqi:before{content:\\\"\\\\E653\\\"}.icon-wenjianjiazhankai:before{content:\\\"\\\\E654\\\"}.icon-jiantou12:before{content:\\\"\\\\E603\\\"}.icon-jianhao:before{content:\\\"\\\\E606\\\"}.icon-jiahao2:before{content:\\\"\\\\E648\\\"}.icon-yousanjiao:before{content:\\\"\\\\E629\\\"}.icon-jiajianchengchu-:before{content:\\\"\\\\E61C\\\"}.icon-jiajianchengchu-1:before{content:\\\"\\\\E61D\\\"}.icon-jiahao:before{content:\\\"\\\\E616\\\"}.icon-jianhao1:before{content:\\\"\\\\E617\\\"}.icon-sanjiao3-copy:before{content:\\\"\\\\E7E1\\\"}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 360:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"iconfont.ttf?3fd9bbb39ea5fcd2e6e03f30a745e88e\";\n\n/***/ }),\n\n/***/ 361:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"iconfont.svg?5acc98856fb3b59d18bdd51df00c3819\";\n\n/***/ }),\n\n/***/ 362:\n/***/ (function(module, exports) {\n\nmodule.exports = {\"arrow1\":[\"iconfont icon-jiantou12\",45],\"arrow2\":[\"iconfont icon-sanjiao3-copy\",90],\"arrow3\":[\"iconfont icon-yousanjiao\",90],\"arrow4\":[\"iconfont icon-yousanjiao\",\"iconfont icon-sanjiao3\"],\"arrow5\":[\"iconfont icon-wenjianjia\",\"iconfont icon-wenjianjiafolder80\"],\"arrow6\":[\"iconfont icon-wenjianjiashouqi\",\"iconfont icon-wenjianjiazhankai\"],\"arrow7\":[\"iconfont icon-tongxunguanli\",\"iconfont icon-tongxunguanlizhankai\"],\"arrow8\":[\"iconfont icon-jiahao\",\"iconfont icon-jianhao1\"],\"arrow9\":[\"iconfont icon-shousuojiahao\",\"iconfont icon-shousuojianhao\"],\"arrow10\":[\"iconfont icon-jiajianchengchu-1\",\"iconfont icon-jiajianchengchu-\"]}\n\n/***/ }),\n\n/***/ 363:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',_vm._l((_vm.listData),function(item,index){return _c('div',{key:index},[_c('div',{class:_vm.branchClassName(_vm.branchLevel+(index+1)),style:(_vm.branchStyle(_vm.branchLevel+(index+1))),attrs:{\"id\":'lt-branch_'+(_vm.branchLevel+(index+1)),\"data-index\":_vm.branchLevel+(index+1)},on:{\"click\":function($event){$event.preventDefault();_vm.clickBranch(_vm.branchLevel+(index+1), item.parameter, 'line')},\"mouseover\":function($event){$event.preventDefault();_vm.MouseOverBranch(item.parameter, 'line')}}},[(_vm.getArrow(_vm.branchLevel+(index+1))&&item.children&&item.children.length>0)?_c('div',{staticClass:\"lt-branch-arrow-bg\",style:(_vm.brancharrowBgStyle),attrs:{\"id\":'lt-branch-arrow-bg_'+(_vm.branchLevel+(index+1))}},[((_vm.control['lt-branch-arrow_'+(_vm.branchLevel+(index+1))]==='show')||(item.arrow!==undefined&&item.arrow.length===2))?_c('div',{class:_vm.branchArrowClassName(_vm.branchLevel+(index+1)),style:(_vm.branchArrowStyle(_vm.branchLevel+(index+1))),attrs:{\"id\":'lt-branch-arrow_'+(_vm.branchLevel+(index+1))}}):_vm._e()]):_vm._e(),_vm._v(\" \"),(item.icon&&item.icon!=='')?_c('div',{class:item.icon+' lt-branch-icon',style:(_vm.branchIconStyle),attrs:{\"id\":'lt-branch-icon_'+(_vm.branchLevel+(index+1))}}):_vm._e(),_vm._v(\" \"),_c('span',{style:(_vm.branchSpanStyle(item.icon)),on:{\"click\":function($event){$event.preventDefault();_vm.clickBranch(_vm.branchLevel+(index+1), item.parameter, 'content')},\"mouseover\":function($event){$event.preventDefault();_vm.MouseOverBranch(item.parameter, 'content')}}},[_vm._v(_vm._s(item.name))])]),_vm._v(\" \"),(item.children&&item.children.length>0)?_c('div',{style:(_vm.branchAnimationStyle(_vm.branchLevel+(index+1))),attrs:{\"id\":'lt-branch-animation_'+(_vm.branchLevel+(index+1))}},[_c('div',{style:(_vm.branchBoxStyle(_vm.branchLevel+(index+1), item.children)),attrs:{\"id\":'lt-branch-box_'+(_vm.branchLevel+(index+1))}},[(item.children&&item.children.length>0)?_c('branch',{attrs:{\"listData\":item.children,\"open\":_vm.open,\"openOnly\":_vm.openOnly,\"indent\":_vm.indent,\"arrow\":_vm.arrow,\"arrowLeft\":_vm.arrowLeft,\"arrowSize\":_vm.arrowSize,\"animation\":_vm.animation,\"eventArea\":_vm.eventArea,\"clickBranchIndex\":_vm.clickBranchIndex,\"branchLevel\":_vm.branchLevel+(index+1)+'-',\"depth\":_vm.depth+1},on:{\"sendClickBranchIndex\":_vm.getClickBranchIndex}}):_vm._e()],1)]):_vm._e()])}))}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ 364:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('branch',{attrs:{\"listData\":_vm.listData,\"open\":_vm.open,\"openOnly\":_vm.openOnly,\"indent\":_vm.indent,\"arrow\":_vm.arrow,\"arrowLeft\":_vm.arrowLeft,\"arrowSize\":_vm.arrowSize,\"animation\":_vm.animation,\"eventArea\":_vm.eventArea,\"clickBranchIndex\":_vm.clickBranchIndex},on:{\"sendClickBranchIndex\":_vm.getClickBranchIndex}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ 365:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(92);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib__ = __webpack_require__(353);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__listdata_json__ = __webpack_require__(370);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__listdata_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__listdata_json__);\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_1__lib__[\"a\" /* default */], {\n  listData: __WEBPACK_IMPORTED_MODULE_2__listdata_json___default.a,\n  arrowSize: 10,\n  // arrowLeft: -8,\n  open: 1,\n  icon: 4\n  // animation: false\n});\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].prototype.$listClick = function (r) {\n  // console.log(r)\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = ({});\n\n/***/ }),\n\n/***/ 368:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(369);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(129)(\"c5b2dfd2\", content, true, {});\n\n/***/ }),\n\n/***/ 369:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(91)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 370:\n/***/ (function(module, exports) {\n\nmodule.exports = [{\"name\":\"一级目录一\",\"children\":[{\"name\":\"二级目录一\",\"children\":[{\"name\":\"三级目录一\",\"children\":[{\"name\":\"四级目录一\",\"parameter\":14},{\"name\":\"四级目录二\",\"parameter\":15,\"children\":[{\"name\":\"五级目录一\",\"parameter\":\"/abc\",\"children\":[]}]}]},{\"name\":\"三级目录二\",\"parameter\":4,\"children\":[]}]}]},{\"name\":\"一级目录二\",\"parameter\":5,\"children\":[{\"name\":\"二级目录二\",\"parameter\":6,\"children\":[{\"name\":\"三级目录三\",\"parameter\":7},{\"name\":\"三级目录四\",\"parameter\":8}]},{\"name\":\"二级目录三\",\"parameter\":9,\"children\":[{\"name\":\"三级目录X\",\"parameter\":10}]},{\"name\":\"二级目录四\",\"parameter\":11,\"children\":[{\"name\":\"三级目录Y\",\"parameter\":12}]}]},{\"name\":\"一级目录三\",\"parameter\":13,\"children\":[{\"name\":\"二级目录五\",\"parameter\":14,\"children\":[{\"name\":\"三级目录五\",\"children\":[{\"name\":\"四级目录三\",\"children\":[{\"name\":\"52\",\"parameter\":\"/abc\",\"children\":[{\"name\":\"61\",\"children\":[{\"name\":\"71\",\"children\":[{\"name\":\"81\",\"parameter\":\"/abc\"}]}]}]}]}]}]}]}]\n\n/***/ }),\n\n/***/ 371:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"listtree\"})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 2.build.js","function injectStyle (ssrContext) {\n  require(\"!!vue-loader/node_modules/vue-style-loader!css-loader?minimize!../node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7b1c19f1\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/_vue-loader@13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7b1c19f1\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 345\n// module chunks = 2","<template>\r\n  <div>\r\n    <branch :listData=\"listData\"\r\n            :open=\"open\"\r\n            :openOnly=\"openOnly\"\r\n            :indent=\"indent\"\r\n            :arrow=\"arrow\"\r\n            :arrowLeft=\"arrowLeft\"\r\n            :arrowSize=\"arrowSize\"\r\n            :animation=\"animation\"\r\n            :eventArea=\"eventArea\"\r\n            :clickBranchIndex=\"clickBranchIndex\"\r\n            @sendClickBranchIndex=\"getClickBranchIndex\"></branch>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Branch from './branch'\r\n/* eslint-disable spaced-comment */\r\nexport default {\r\n  components: {\r\n    Branch\r\n  },\r\n  name: 'mytree',\r\n  data () {\r\n    return {\r\n      clickBranchIndex: '' // -----------被点击的分支index，当用户点击branch时赋值\r\n    }\r\n  },\r\n  props: ['listData', 'open', 'openOnly', 'indent', 'arrow', 'arrowLeft', 'arrowSize', 'animation', 'eventArea'],\r\n  methods: {\r\n    getClickBranchIndex (index) {\r\n      this.clickBranchIndex = index\r\n    }\r\n    // /* createList 函数把从外部读取的数组转化为树形结构，x为代表目录信息的数组，parent为目录的父元素，t为中介参数，用来传递arr的值，arr的值包含了目录在树状结构中所处级别和位置的信息 */\r\n    // createList (x, parent, t = []) {\r\n    //   let _this = this\r\n    //   if (x.length > 0) {\r\n    //     /* 设定arr的值，使arr的长度和目录在树状结构中所处级别对应，arr内元素的值和目录位置对应。比如arr值为[0,3]时，表示该目录处于第一大类（arr第一个元素值为0）第四个分类（arr第二个元素值为3），目录的级别为第二小分类（arr长度为2）。arr值为[2]时，表示该目录处于第三大类，目录级别为大类。知道目录所处级别就可以为不同级别的目录设定不同的样式 */\r\n    //     let arr = []\r\n\r\n    //     /* 通过循环设定arr的值等于t，但不能通过arr=t来设定，这样设定的话就把arr的值和t的值绑定，改变其中一个的值就会改变另一个的值，这不是我们想要的 */\r\n    //     for (let k = 0; k < t.length; k++) {\r\n    //       arr[k] = t[k]\r\n    //     }\r\n    //     /* 每次执行 createList 函数的时候都将arr的长度增加1（创建下一级目录时都要执行 createList 函数），从而达到使arr.length与目录级别一致的目的*/\r\n    //     arr.push(0)\r\n\r\n    //     /* ellist收集了所有当前级别目录所在div，当需要改变所有目录样式的时候可以通过循环ellist来设定每个目录的样式 ，allellist则是所有目录所在div的集合，通过循环allellist可获取非本级别的目录*/\r\n    //     let ellist = []\r\n\r\n    //     /* 根据x中的各元素创建树状目录及其属性 */\r\n    //     for (let n = 0; n < x.length; n++) {\r\n    //       /* 目录展开或关闭：当目录样式名称中包含openr表示该目录是展开的，当目录样式名称中包含closer表示该目录是关闭的。反过来当要展开目录时则将目录样式添加openr，并删除closer。当要关闭目录时则将目录样式添加closer，并删除openr。 */\r\n    //       let openr = ' titleopen'\r\n    //       let closer = ' titleclose'\r\n\r\n    //       /* 创建目录 */\r\n    //       let link\r\n    //       let par = document.createElement('div')\r\n    //       let arrowDiv = document.createElement('div')\r\n    //       par.appendChild(arrowDiv)\r\n    //       let node = document.createTextNode(x[n].name)\r\n    //       if (!x[n].childer || x[n].childer.length === 0) {\r\n    //         link = document.createElement('a')\r\n    //         link.appendChild(node)\r\n    //         link.setAttribute('href', x[n].router)\r\n    //         par.appendChild(link)\r\n    //       } else {\r\n    //         par.appendChild(node)\r\n    //       }\r\n    //       par.style.paddingLeft = this.indentLetter + 10 + 'px'\r\n    //       par.style.marginBottom = this.branchSpace + 'px'\r\n\r\n    //       let arrowDivClassName = 'arrowDiv'\r\n    //       /* 当this.ifarrow为true表示目录前要带有图标，则将图标div显示，并且根据customarrow值判断是否使用自定义图标，使用自定义图标则图标div使用className为coutomarrowDivOpen或者coutomarrowDivClose，不使用自定义图标则图标div使用className为arrowDivOpen或者arrowDivClose */\r\n    //       if (this.ifarrow) {\r\n    //         arrowDiv.style.display = ''\r\n    //         if (_this.customarrow.length === 0) {\r\n    //           arrowDivClassName = 'arrowDiv'\r\n    //         } else {\r\n    //           arrowDivClassName = 'coutomarrowDiv'\r\n    //         }\r\n    //       } else { // 否则表示目录前不带有图标则将图标div隐藏\r\n    //         arrowDiv.style.display = 'none'\r\n    //       }\r\n\r\n    //       /* 当open等于1时，设定所有目录初始状态都是展开的 */\r\n    //       if (_this.open === 1) {\r\n    //         par.className = 'par' + openr\r\n    //         arrowDiv.className = arrowDivClassName + 'Open'\r\n    //         if (_this.customarrow.length !== 0) {\r\n    //           arrowDiv.style.backgroundImage = 'url(' + _this.customarrow[1] + ')'\r\n    //           arrowDiv.style.backgroundRepeat = 'no-repeat'\r\n    //           arrowDiv.style.backgroundPosition = 'center center'\r\n    //         }\r\n    //       } else { // 当open不等于1时，设定所有目录初始状态都是关闭的\r\n    //         par.className = 'par' + closer\r\n    //         arrowDiv.className = arrowDivClassName + 'Close'\r\n    //         if (_this.customarrow.length !== 0) {\r\n    //           arrowDiv.style.backgroundImage = 'url(' + _this.customarrow[0] + ')'\r\n    //           arrowDiv.style.backgroundRepeat = 'no-repeat'\r\n    //           arrowDiv.style.backgroundPosition = 'center center'\r\n    //         }\r\n    //       }\r\n\r\n    //       /* 为每个目录添加一个' treeBranch' + arr.length 样式，即给一级目录添加 treeBranch1 样式，给二级目录添加 treeBranch2 样式，给三级目录添加 treeBranch3 样式……，使得每级目录可以从外观上区别开来，并且 treeBranch 样式可以在插件外自定义*/\r\n    //       par.className = par.className + ' treeBranch' + arr.length\r\n\r\n    //       /* 每个目录下都有个box，其所有子目录都在box中 */\r\n    //       let box = document.createElement('div')\r\n    //       parent.appendChild(par)\r\n    //       parent.appendChild(box)\r\n\r\n    //       /* 设置子目录左边框相对于父目录左边框的缩进距离 */\r\n    //       box.style.paddingLeft = this.indentarrow + 'px'\r\n\r\n    //       /* child等于1的时候表示该目录下还有子目录，child等于0时表示该目录为底目录，下面已经没有子目录了。点击底目录可打开新的页面内容，点击非底目录则显示或隐藏下面的子目录 */\r\n    //       let child\r\n    //       if (x[n].childer && x[n].childer.length > 0) {\r\n    //         child = 1\r\n    //       } else {\r\n    //         child = 0\r\n    //         arrowDiv.style.display = 'none'\r\n    //       }\r\n\r\n    //       /* 当open不等于1时隐藏box，即隐藏子目录，换句话说就是关闭所有目录 */\r\n    //       if (_this.open !== 1) {\r\n    //         box.style.display = 'none'\r\n    //       }\r\n    //       /* 当open等于3或4时，展开一级目录（arr.length与目录级别一致）*/\r\n    //       if ((_this.open === 3 || _this.open === 4) && arr.length === 1) {\r\n    //         par.className = par.className.replace(closer, openr)\r\n    //         arrowDiv.className = arrowDivClassName + 'Open'\r\n    //         if (_this.customarrow.length !== 0) {\r\n    //           arrowDiv.style.backgroundImage = 'url(' + _this.customarrow[1] + ')'\r\n    //           arrowDiv.style.backgroundRepeat = 'no-repeat'\r\n    //           arrowDiv.style.backgroundPosition = 'center center'\r\n    //         }\r\n    //         box.style.display = ''\r\n    //         if (_this.open === 4 && arr.length === 1) {\r\n    //           arrowDiv.style.display = 'none'\r\n    //         }\r\n    //       }\r\n\r\n    //       /* ------------------------点击事件--------------------------- */\r\n    //       par.onclick = function () {\r\n    //         /* 当open等于2并且当前被点击的目录为关闭状态的时候关闭所有的目录，为展开当前目录做准备（因为open等于2时在同一时间只允许展开一个目录） */\r\n    //         if (_this.open === 2 && par.className.indexOf(closer) !== -1) {\r\n    //           for (let k = 0; k < ellist.length; k++) {\r\n    //             ellist[k].par.className = ellist[k].par.className.replace(openr, closer)\r\n    //             ellist[k].arrowDiv.className = arrowDivClassName + 'Close'\r\n    //             if (_this.customarrow.length !== 0) {\r\n    //               ellist[k].arrowDiv.style.backgroundImage = 'url(' + _this.customarrow[0] + ')'\r\n    //               ellist[k].arrowDiv.style.backgroundRepeat = 'no-repeat'\r\n    //               ellist[k].arrowDiv.style.backgroundPosition = 'center center'\r\n    //             }\r\n    //             ellist[k].box.style.display = 'none'\r\n    //           }\r\n    //         }\r\n\r\n    //         /* 当该目录为展开状态时，点击后闭合，当该目录为闭合状态时，点击后展开，但open等于4并且被点击的目录为一级目录时点击无效 */\r\n    //         if (_this.open !== 4 || arr.length > 1) {\r\n    //           box.style.display = box.style.display === 'none' ? '' : 'none'\r\n    //           if (par.className.indexOf(openr) !== -1) {\r\n    //             par.className = par.className.replace(openr, closer)\r\n    //             arrowDiv.className = arrowDivClassName + 'Close'\r\n    //             if (_this.customarrow.length !== 0) {\r\n    //               arrowDiv.style.backgroundImage = 'url(' + _this.customarrow[0] + ')'\r\n    //               arrowDiv.style.backgroundRepeat = 'no-repeat'\r\n    //               arrowDiv.style.backgroundPosition = 'center center'\r\n    //             }\r\n    //           } else if (par.className.indexOf(closer) !== -1) {\r\n    //             par.className = par.className.replace(closer, openr)\r\n    //             arrowDiv.className = arrowDivClassName + 'Open'\r\n    //             if (_this.customarrow.length !== 0) {\r\n    //               arrowDiv.style.backgroundImage = 'url(' + _this.customarrow[1] + ')'\r\n    //               arrowDiv.style.backgroundRepeat = 'no-repeat'\r\n    //               arrowDiv.style.backgroundPosition = 'center center'\r\n    //             }\r\n    //           }\r\n    //         }\r\n\r\n    //         /* 当被点击的目录为底层目录时使得该目录及其中的一个祖先目录成选中状态 */\r\n    //         if (!x[n].childer || x[n].childer.length === 0) {\r\n    //           _this.router.push(x[n].router)\r\n    //           /* 通过循环allellist里的所有元素查找被点击目录的所有祖先目录，然后通过checkedparents值来确定一级祖先目录还是二级祖先目录设定为选中状态 */\r\n    //           for (let l = 0; l < _this.allellist.length; l++) {\r\n    //             if (_this.allellist[l].child === 0) {\r\n    //               _this.allellist[l].par.className = _this.allellist[l].par.className.replace(' checkedself', '')\r\n    //             } else if (_this.checkedparents === 1) {\r\n    //               if (_this.allellist[l].arr.length === 1) {\r\n    //                 /* 当allellist[l]为一级目录（即allellist[l].arr.length === 1）时，点击它下面的子孙目录时allellist[l]的样式才会改变。 */\r\n    //                 _this.allellist[l].par.className = _this.allellist[l].par.className.replace(' checkedparents', '')\r\n    //                 if (_this.allellist[l].arr[0] === arr[0]) {\r\n    //                   /* 通过判断allellist[l].arr中第一个元素和当前arr第一个元素是否相等来判断allellist[l]是否当前点击的这个目录的祖先目录，如果是则改变allellist[l]的样式 */\r\n    //                   _this.allellist[l].par.className = _this.allellist[l].par.className + ' checkedparents'\r\n    //                 }\r\n    //               }\r\n    //             } else if (_this.checkedparents === 2) {\r\n    //               if (_this.allellist[l].arr.length === 2) {\r\n    //                 /* 当allellist[l]为二级目录（即allellist[l].arr.length === 2）时，点击它下面的子孙目录时allellist[l]的样式才会改变 */\r\n    //                 _this.allellist[l].par.className = _this.allellist[l].par.className.replace(' checkedparents', '')\r\n    //                 if (_this.allellist[l].arr[0] === arr[0] && _this.allellist[l].arr[1] === arr[1]) {\r\n    //                   /* 通过判断allellist[l].arr中前2个元素和当前arr前2个元素是否相等来判断allellist[l]是否当前点击的这个目录的祖先目录，如果是则改变allellist[l]的样式 */\r\n    //                   _this.allellist[l].par.className = _this.allellist[l].par.className + ' checkedparents'\r\n    //                 }\r\n    //               }\r\n    //             }\r\n    //           }\r\n    //           /* 改变被点击的底层目录自身为选中状态 */\r\n    //           par.className = par.className + ' checkedself'\r\n    //         }\r\n    //       }\r\n    //       /* ----------------------------------------------------------- */\r\n\r\n    //       /* 将每个目录所在div信息收集起来，这里arr必须用一个中介（thearr）来转一下，否则后面push的arr值会覆盖前面的arr值 */\r\n    //       /* ellist收集的是本级目录信息，因为创建每级目录时都会执行一次createList，而每次执行createList都会重新定义ellist，所以每个ellist收集的都是本次执行函数createList时push给ellist的值 */\r\n    //       /* allellist收集的是所有目录的信息，因为allellist是函数createList外面的数据，每次push给allellist的值都保存在allellist里面 */\r\n    //       let thearr = []\r\n    //       for (let kk = 0; kk < arr.length; kk++) {\r\n    //         thearr[kk] = arr[kk]\r\n    //       }\r\n    //       let theel = {\r\n    //         par,\r\n    //         arrowDiv,\r\n    //         box,\r\n    //         child,\r\n    //         arr: thearr\r\n    //       }\r\n    //       ellist.push(theel)\r\n    //       _this.allellist.push(theel)\r\n\r\n    //       /* 如果当前创建的目录还有子目录则再执行函数createList来创建子目录，*/\r\n    //       if (x[n].childer && x[n].childer.length > 0) {\r\n    //         _this.createList(x[n].childer, box, arr)\r\n    //       } else {\r\n    //         par.className = 'par title' + arr.length\r\n    //       }\r\n\r\n    //       /* 进入下次循环前将arr最后一个元素值加1，使得arr每个元素值与对应目录所处位置一致：元素值为0表示对应的目录在同级目录中为第一个目录，元素值为1表示对应的目录在同级目录中为第二个目录 */\r\n    //       /* arr.length则与对应目录所处级别一致：arr.length为1表示该目录为一级目录，arr.length为2表示该目录为二级目录 */\r\n    //       arr[arr.length - 1]++\r\n    //     }\r\n    //   }\r\n    // }\r\n  }\r\n}\r\n</script>\r\n<style>\r\na{\r\n  color: black;\r\n  text-decoration: none;\r\n}\r\na:hover{\r\n  color: black;\r\n  text-decoration: none;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/lib/tree.vue","function injectStyle (ssrContext) {\n  require(\"!!vue-loader/node_modules/vue-style-loader!css-loader?minimize!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-00086115\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=styles&index=0!./branch.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./branch.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./branch.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-00086115\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=template&index=0!./branch.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/branch.vue\n// module id = 349\n// module chunks = 0 1 2","module.exports = __webpack_public_path__ + \"iconfont.eot?a5f8db96505701301350ff3d0cd3948d\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/arrow/iconfont.eot?t=1530402100306\n// module id = 350\n// module chunks = 0 1 2","<template>\r\n<div>\r\n  <div v-for=\"(item, index) in listData\" :key=\"index\">\r\n    <!-- ========= branch ===========树形结构中每个目录为一个独立的分支（branch），一级branch的index为X，二级branch的index为：X-X，三级branch的index为：X-X-X，以此类推 -->\r\n    <!-- 层的编号（index）设计规则：一级分支用一个数字表示，二级用2个数字中间连一个“-”表示，三级分支用三个数字，每个数字中间连“-”……，比如：A-B-C-D-……，其中A表示所属一级分支编号，B表示所属二级分支编号，C表示所属三级分支编号……； -->\r\n    <!-- id 前缀命名规则：branch的前缀为 lt-branch_ ，图标层的前缀为 lt-branch-arrow_ ，图标基座的前缀为 lt-branch-arrow-bg_ ，animation(动画)层前缀为：lt-branch-animation_，box层的前缀为 lt-branch-box_ 。层的 id 就是：前缀+编号 -->\r\n    <!-- className 规则：所有分支branch都含有 lt-branch，所有的图标都包含：lt-branch-arrow；所有一级分支都包含 lt-branch_level_1，二级分支包含：lt-branch_level_2，三级分支包含：lt-branch_level_3……；所有一级分支图标都包含：lt-branch-arrow_level_1，所有二级分支图标包含：lt-branch-arrow_level_2，所有三级图标包含：lt-branch-arrow_level_3……，如果一个分支下面没有下级分支，那么该分支将包含：lt-branch-arrow_level_0；当前被点击的分支包含：lt-branch_active，当前被点击的分支图标包含：lt-branch-arrow_active，一级分支下级子孙分支被点击后该一级分支将包含：lt-branch_level_1_active，该一级分支的图标将包含： lt-branch-arrow_level_1_active，二级分支下级子孙分支被点击后该二级分支将包含：lt-branch_level_2_active，该二级分支的图标将包含： lt-branch-arrow_level_2_active，三级分支下级子孙分支被点击后该三级分支将包含：lt-branch_level_3_active，该三级分支的图标将包含： lt-branch-arrow_level_3_active……。后面带有active的分支表示正在活动的分支，但只有点击可以打开新路由内容的branch（即在listData中该branch包含parameter属性）才能触发active。 -->\r\n    <div :id=\"'lt-branch_'+(branchLevel+(index+1))\"\r\n         :data-index=\"branchLevel+(index+1)\"\r\n         :class=\"branchClassName(branchLevel+(index+1))\"\r\n         :style=\"branchStyle(branchLevel+(index+1))\"\r\n         @click.prevent=\"clickBranch(branchLevel+(index+1), item.parameter, 'line')\"\r\n         @mouseover.prevent=\"MouseOverBranch(item.parameter, 'line')\">\r\n      <div :id=\"'lt-branch-arrow-bg_'+(branchLevel+(index+1))\"\r\n           class='lt-branch-arrow-bg'\r\n           :style=\"brancharrowBgStyle\"\r\n           v-if=\"getArrow(branchLevel+(index+1))&&item.children&&item.children.length>0\">\r\n        <div :id=\"'lt-branch-arrow_'+(branchLevel+(index+1))\"\r\n              :class='branchArrowClassName(branchLevel+(index+1))'\r\n              :style=\"branchArrowStyle(branchLevel+(index+1))\"\r\n              v-if=\"(control['lt-branch-arrow_'+(branchLevel+(index+1))]==='show')||(item.arrow!==undefined&&item.arrow.length===2)\"></div>\r\n      </div>\r\n      <div :id=\"'lt-branch-icon_'+(branchLevel+(index+1))\"\r\n           v-if=\"item.icon&&item.icon!==''\"\r\n           :class=\"item.icon+' lt-branch-icon'\"\r\n           :style=\"branchIconStyle\"></div>\r\n      <span @click.prevent=\"clickBranch(branchLevel+(index+1), item.parameter, 'content')\"\r\n            @mouseover.prevent=\"MouseOverBranch(item.parameter, 'content')\"\r\n            :style=\"branchSpanStyle(item.icon)\">{{item.name}}</span>\r\n    </div>\r\n    <!--=============== animation ================= 每个branch下都有个animation层，是用来实现伸缩动画的 -->\r\n    <div v-if=\"item.children&&item.children.length>0\"\r\n         :id=\"'lt-branch-animation_'+(branchLevel+(index+1))\"\r\n         :style=\"branchAnimationStyle(branchLevel+(index+1))\">\r\n      <!--=============== box ================= 每个branch下都有个box层，branch所有的下级分支都在box内，branch的展开和闭合就可以用box的显示隐藏来实现。另外box与左边框的距离可以实现上下级branch的缩进 -->\r\n      <div :id=\"'lt-branch-box_'+(branchLevel+(index+1))\"\r\n          :style=\"branchBoxStyle(branchLevel+(index+1), item.children)\">\r\n        <branch :listData=\"item.children\"\r\n                :open=\"open\"\r\n                :openOnly=\"openOnly\"\r\n                :indent=\"indent\"\r\n                :arrow=\"arrow\"\r\n                :arrowLeft=\"arrowLeft\"\r\n                :arrowSize=\"arrowSize\"\r\n                :animation=\"animation\"\r\n                :eventArea=\"eventArea\"\r\n                :clickBranchIndex=\"clickBranchIndex\"\r\n                @sendClickBranchIndex=\"getClickBranchIndex\"\r\n                :branchLevel=\"branchLevel+(index+1)+'-'\"\r\n                :depth=\"depth+1\"\r\n                v-if=\"item.children&&item.children.length>0\"></branch>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n<script>\r\nimport Branch from './branch'\r\nimport iconfont from './arrow.json'\r\n\r\nexport default {\r\n  name: 'branch',\r\n  data () {\r\n    return {\r\n      control: {}, // -----------------控制各个branch,box,arrow的展开或闭合状态\r\n      animationTime: 0 // -----------动画执行时间\r\n    }\r\n  },\r\n  components: {\r\n    Branch\r\n  },\r\n  props: {\r\n    branchLevel: { // ---------分支级别，顶级分支为x，二级分支为x-x，三级分支为x-x-x，以此类推，系统会自动分别一级一级往下传递\r\n      default: 0\r\n    },\r\n    depth: { // ------------分支级别的深度，一级分支深度为0，二级分支深度为1，三级分支深度为2，以此类推，系统会自动分别一级一级往下传递\r\n      default: 0\r\n    },\r\n    clickBranchIndex: '', // -----------被点击的分支index，用户在分支上点击（处于组件branch.vue中）后会触发sendClickBranchIndex事件，上一级组件（上一级branch.vue）监听到sendClickBranchIndex后再运行gitClickBranchIndex事件，gitClickBranchIndex事件里又触发sendClickBranchIndex事件往上传递，一直到组件tree.vue监听到sendClickBranchIndex事件后更改data中的clickBranchIndex，tree.vue下所有的组件都会接受到clickBranchIndex的更改\r\n    // -------------------------------------------以上props内容用户不能控制，以下props用户可以设置-------------------------------\r\n    listData: { // -----------json格式的数据，每个分支目录有name,parameter,arrow,children四个个字段，name为分支的文字内容（必须有）。parameter为点击分支时跳转的路由地址,如果不跳转可省略parameter字段。arrow为该分支前的图标地址（包括展开时和闭合时的图标，所以arrow是个数组），如果使用默认图标arrow字段可以省略。children为该分支的下级分支，如果没有下级分支children字段也可以省略\r\n      default: function () {\r\n        return []\r\n      }\r\n    },\r\n    open: {// --设置初始状态下各分支展开或闭合情况:0为全部闭合，1为全部展开；2第一个分支展开其他都闭合，且同级分支始终只能有一个展开；3除了一级分支展开，其他分支全都闭合；4除了一级分支展开，其他分支全都闭合，并且一级分支不能闭合，一级分支没有图标\r\n      default: 1\r\n    },\r\n    openOnly: {\r\n      default: 0\r\n    },\r\n    indent: { // -----子级分支相对父级分支的缩进距离\r\n      default: 24\r\n    },\r\n    arrow: {\r\n      default: 1 // ------arrow箭头图标，等于0时表示用户不需要图标，为大于0的整数时为系统自带的图标，为数组时为自定义图标（Font-Awesome和阿里巴巴图标）作为图标，数组第一个元素为闭合时图标，第二个元素为展开时图标或者是闭合图标需要旋转的角度，当数组内元素为图片地址时，用自定义图片做图标\r\n    },\r\n    arrowSize: { // -----设置箭头图标大小，单位为 px\r\n      default: 25\r\n    },\r\n    arrowLeft: { // -----设置箭头图标边距，如果为正整数表示距离左边的距离，如果为负数表示距离右边的距离，单位为 px\r\n      default: 10\r\n    },\r\n    animation: { // ---animation设为false时不使用动画\r\n      default: 1\r\n    },\r\n    eventArea: { // ----事件区域，eventArea有2个值分别为'line'和'content'，值为'line'时表示鼠标点击或经过菜单分支所在行时触发Vue.prototype.$listClick和Vue.prototype.$listMouseOver；值为'content'时表示鼠标点击或经过菜单分支文字内容时触发Vue.prototype.$listClick和Vue.prototype.$listMouseOver。\r\n      default: 'line'\r\n    }\r\n  },\r\n  methods: {\r\n    MouseOverBranch (parameter, eventArea) { // -----------------------------鼠标经过 branch-------------------------------\r\n      if (eventArea !== this.eventArea) return false\r\n      if (typeof(this.$listMouseOver) === \"function\") {\r\n        this.$listMouseOver(parameter) // ----鼠标经过branch时传递parameter给插件外的组件，插件外的组件通过给Vue的原型添加方法$listMouseOver 来获取参数parameter，并进行一系列的操作\r\n      }\r\n    },\r\n    clickBranch (index, parameter, eventArea) { // -----------------------------branch 点击事件--------------------------------\r\n      if (eventArea !== this.eventArea) return false\r\n      if (this.control['lt-branch_' + index][0] === 'always') return false\r\n      /* 如果没有动画，那么点击branch时直接就修改control值，否则就在执行完动画后在doAnimation中修改control值 */\r\n      if (!isNaN(parseInt(this.animation)) && this.animation > 0) {\r\n        // this.doAnimation(this.getChildBranchIndex(index), index)\r\n        this.doRotate(index)\r\n        if (this.animation === 1) {this.doAnimation(this.getChildBranchIndex(index), index)}\r\n        else if (this.animation === 2) {this.doAnimation2(this.getChildBranchIndex(index), index)}\r\n      } else {\r\n        this.setControl(index)\r\n      }\r\n      if (typeof(this.$listClick) === \"function\") {\r\n        this.$listClick(parameter) // ----branch被点击时传递parameter给插件外的组件，插件外的组件通过给Vue的原型添加方法$listClick来获取参数parameter，并进行一系列的操作\r\n      }\r\n\r\n      if (parameter && parameter !== '') {\r\n        this.$emit('sendClickBranchIndex', index)\r\n      }\r\n      return false\r\n    },\r\n    getChildBranchIndex (index) { // ----- 获取子分支index，用于动画展现（只获取显示的子分支，隐藏状态的不获取）\r\n      let n = 1\r\n      let arr = []\r\n      while (document.getElementById('lt-branch_' + index + '-' + n)) {\r\n        arr.push(index + '-' + n)\r\n        let elBox = document.getElementById('lt-branch-animation_' + index + '-' + n)\r\n        if (elBox && elBox.style.display !== 'none') {\r\n          arr.push(...this.getChildBranchIndex (index + '-' + n))\r\n        }\r\n        n++\r\n      }\r\n      return arr\r\n    },\r\n    doAnimation (arr, index) { // ----------执行动画\r\n      let elBox = document.getElementById('lt-branch-animation_' + index)\r\n\r\n      if (elBox) {\r\n        elBox.style.display = ''\r\n        let enterLeave\r\n        if (this.control['lt-branch_' + index][0] === 'open' || this.control['lt-branch_' + index][0] === 1) { // --当前为展开状态则将要执行的是收缩动画\r\n          arr = arr.reverse() // -----反转数组，即动画从最后一个子分支开始执行\r\n          enterLeave = 'leave'\r\n          setTimeout(() => {\r\n            this.setControl(index)\r\n            elBox.style.display = 'none'\r\n          }, arr.length * 50 + 200)\r\n        } else if (this.control['lt-branch_' + index][0] === 'close' || this.control['lt-branch_' + index][0] === 0) {\r\n          enterLeave = 'enter'\r\n          this.setControl(index)\r\n          elBox.style.display = ''\r\n        }\r\n        for (let n = 0; n < arr.length; n++) {\r\n          let elBranch = document.getElementById('lt-branch_' + arr[n])\r\n          if (elBranch) {\r\n            elBranch.className = elBranch.className.replace(' branch-enter-start', '').replace(' branch-leave-start', '').replace(' branch-enter-end', '').replace(' branch-leave-end', '')\r\n            if (enterLeave === 'leave') elBranch.className += ' branch-leave-start' // ----展开的动画起始样式在这里，为了避免display的干扰收缩的动画样式必须在display改变之后\r\n            elBranch.style.display = enterLeave === 'leave' ? 'block' : 'none'\r\n            if (typeof arr[n] === 'string') {\r\n              setTimeout(() => { // -----相邻的分支之间执行动画相隔80微秒\r\n                if (enterLeave === 'leave') {\r\n                  elBranch.className += ' branch-leave-end'\r\n                  setTimeout(() => {\r\n                    elBranch.style.display = 'none' // ---用setTimeout是因为必须在展开动画执行完后才隐藏分支，同时也能避免display的改变对展开动画的干扰\r\n                  }, 300)\r\n                } else if (enterLeave === 'enter') {\r\n                  elBranch.style.display = 'block'\r\n                  elBranch.className += ' branch-enter-start' // ----- 收缩的动画放在这里开始是为了避免display的干扰\r\n                  setTimeout(() => {\r\n                    elBranch.className += ' branch-enter-end' // ----这里如果不用setTimeout的话css3动画不能执行\r\n                  }, 100)\r\n                }\r\n              }, 50 * n)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    doAnimation2 (arr, index) { // ----------执行动画\r\n      let elBox = document.getElementById('lt-branch-animation_' + index)\r\n\r\n      if (elBox) {\r\n        elBox.style.display = ''\r\n        let branchDisplay\r\n        if (this.control['lt-branch_' + index][0] === 'open' || this.control['lt-branch_' + index][0] === 1) { // --当前为展开状态则将要执行的是收缩动画\r\n          setTimeout(() => {\r\n            this.setControl(index)\r\n          }, arr.length * 30 + 200)\r\n          branchDisplay = 'none'\r\n        } else if (this.control['lt-branch_' + index][0] === 'close' || this.control['lt-branch_' + index][0] === 0) {\r\n          arr = arr.reverse()\r\n          branchDisplay = 'block'\r\n          this.setControl(index)\r\n        }\r\n        for (let n = 0; n < arr.length; n++) {\r\n          let elBranch = document.getElementById('lt-branch_' + arr[n])\r\n          elBranch.style.display = branchDisplay === 'none' ? 'block' : 'none'\r\n          if (elBranch) {\r\n            if (typeof arr[n] === 'string') {\r\n              setTimeout(() => { // -----相邻的分支之间执行动画相隔30微秒\r\n                elBranch.style.display = branchDisplay\r\n              }, 30 * n)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    doRotate (index) { // -------图标旋转动画\r\n      let elarrow = document.getElementById('lt-branch-arrow_' + index)\r\n      if (elarrow) {\r\n        elarrow.style.transition = 'all .3s'\r\n        if (this.control['lt-branch_' + index][0] === 'open' || this.control['lt-branch_' + index][0] === 1) { // --当前为展开状态则将要执行的是收缩动画\r\n          setTimeout(() => {\r\n            elarrow.style.transform = elarrow.style.transform.replace(/rotate\\(\\d*deg\\)/, '')\r\n            elarrow.style.transform += ' rotate(0deg)'\r\n          }, 0)\r\n        } else if (this.control['lt-branch_' + index][0] === 'close' || this.control['lt-branch_' + index][0] === 0) {\r\n          setTimeout(() => {\r\n            elarrow.style.transform = elarrow.style.transform.replace(/rotate\\(\\d*deg\\)/, '')\r\n            elarrow.style.transform += ` rotate(${parseInt(this.getArrow(index)[1])}deg)`\r\n          }, 0)\r\n        }\r\n      }\r\n    },\r\n    setControl (index) { // -----设置this.control['lt-branch_' + index][0]的值，该值决定branch是展开还是闭合\r\n      if (this.openOnly === 1) { // -------openOnly为1时通过循环将所有同级别的branch都关闭确保同级别只能展开一个分支\r\n        let n = 1\r\n        let el\r\n        do {\r\n          if ((this.branchLevel + n) !== index) {\r\n            this.control['lt-branch_' + (this.branchLevel + n)][0] = 'close'\r\n            // this.renewStyle([this.branchLevel + n]) // -------------------------这里renewStyle刷新的是所有同级的分支样式，函数结尾的renewStyle刷新的只是被点击的分支的style\r\n          }\r\n          n++\r\n          el = document.getElementById('lt-branch_' + (this.branchLevel + n))\r\n        } while (el)\r\n      }\r\n\r\n      if (this.control['lt-branch_' + index][0] === 'open' || this.control['lt-branch_' + index][0] === 1) {\r\n        this.$set(this.control, 'lt-branch_' + index, ['close'])\r\n      } else if (this.control['lt-branch_' + index][0] === 'close' || this.control['lt-branch_' + index][0] === 0) {\r\n        this.$set(this.control, 'lt-branch_' + index, ['open'])\r\n      }\r\n    },\r\n    getClickBranchIndex (index) { // ---------------------------------获取当前点击的branch的index，\r\n      this.$emit('sendClickBranchIndex', index) // ---------并把该index值通过自定义事件传给父组件\r\n    },\r\n    branchStyle (id) { // --------branch的样式\r\n      let branchStyle = ''\r\n      let arrowLeft = parseInt(this.arrowLeft)\r\n      if (arrowLeft > 0) branchStyle = `padding-left: ${this.indent * this.depth + arrowLeft + this.arrowSize + 10}px;`\r\n      if (this.control['lt-branch_' + id][0] === 'open' || this.control['lt-branch_' + id][0] === 1 || this.control['lt-branch_' + id][0] === 'always') {\r\n        branchStyle += this.branchOpenStyle\r\n      } else {\r\n        branchStyle += this.branchCloseStyle\r\n      }\r\n      return `position: relative;\r\n              text-align: left;\r\n              ${branchStyle}`\r\n    },\r\n    branchIfShow (index) {\r\n      if (this.depth > 0) { // -------一级分支永远都应该显示且一级分支没有父级分支，所以这里把一级分支排除不进行判断\r\n        let parentIndex = this.branchLevel.toString().split('-').slice(0, -1).join('-')\r\n        if (this.parentControl['lt-branch_' + parentIndex][0] === 'close' || this.parentControl['lt-branch_' + parentIndex][0] === 0) {\r\n          return false\r\n        } else {\r\n          return true\r\n        }\r\n      } else {\r\n        return true\r\n      }\r\n    },\r\n    branchClassName (id) { // ------------branch的className\r\n      let branchClass = ''\r\n      let theId = id.toString()\r\n      let theChildren = ''\r\n      let theData = ''\r\n\r\n      if (this.depth === 0) { // --获取branch的children值，如果该branch没有children(即没有子分支)，就给它加上lt-branch_level_0样式\r\n        theData = this.listData[id - 1]\r\n        if (theData.children) theChildren = theData.children\r\n      } else {\r\n        theData = this.listData[theId.replace(this.branchLevel, '') - 1]\r\n        if (theData.children) theChildren = theData.children\r\n      }\r\n\r\n      branchClass = 'lt-branch lt-branch_level_' + (this.depth + 1) // --------添加常规分支className和当前级别的className\r\n      if (theChildren.length === 0) { // ------如果branch没有子分支，就给branch加上 lt-branch_level_0 样式\r\n        branchClass += ' lt-branch_level_0'\r\n      }\r\n      if (theId.toString() === this.clickBranchIndex.toString().substring(0, theId.length)) { // ------判断是否为当前active状态branch的祖先，如果是就加上active状态的className\r\n        branchClass += ' lt-branch_level_' + (this.depth + 1) + '_active'\r\n      }\r\n      /* 用被点击分支index减掉当前分支的index剩余部分包含一个\"-\"，即表示当前分支仅仅比被点击分支高一级（如果高一级以上，那么replace后剩余部分一定会包含多个\"-\"），为了消除特殊index带来的buger，在判断的时候clickBranchIndex和theId前都加了一个字母，并且最后得加一个判断：\"-\"在第一个位置 */\r\n      let str = ('a' + this.clickBranchIndex.toString()).replace(('a' + theId.toString()), '')\r\n      if ((str.split('-').length - 1 === 1) && str.indexOf('-') === 0) {\r\n        branchClass += ' lt-branch_active_parent'\r\n      }\r\n      if (theId.toString() === this.clickBranchIndex.toString()) { // ------判断是否为当前active状态branch，如果是就加上active状态的className\r\n        branchClass += ' lt-branch_active'\r\n      }\r\n      return branchClass\r\n    },\r\n    getArrow (index) { // ---------图标来源（权重：listData > 参数arrow > arrow.json。如果一个branch没有子级，那么这个branch没有图标，但如果listData中该branch包含arrow属性，那么这个branch哪怕没有子级它也有自己的图标）\r\n      /* 从listData读取arrow */\r\n      // let arr = index.toString().split('-')\r\n      // let privatearrow = this.listData[arr[arr.length - 1] - 1].arrow\r\n      // if (privatearrow !== undefined && privatearrow.length === 2) {\r\n      //   return privatearrow\r\n      // }\r\n      /* 从用户输入的参数arrow 和 arrow.json（默认）读取arrow */\r\n      let arrow = this.arrow\r\n      if (arrow === '' || arrow === 'undefined') arrow = 1\r\n      if (!isNaN(parseInt(arrow))) {\r\n        if (arrow === 0 || arrow === false) return false // -----arrow等于0或者false时不显示箭头图标\r\n        arrow = iconfont['arrow' + arrow] // ----------把arrow.json里的数据赋予arrow\r\n      }\r\n\r\n      return arrow // -----不管用户是使用系统默认图标、自定义图片还是使用第三方图标或者在listData中定义图标，arrow都为数组，数组第一个元素为展开时的图标，第二个元素为闭合时图标（数组元素可能是图片地址，也可能是代表第三方图标的className）\r\n    },\r\n    arrowCloseStyle (index) { // -----箭头图标闭合时的样式\r\n      if (this.getArrow(index)[0].indexOf('/') > -1) { // -----------this.getArrow中的元素包含“/”说明用户使用自定义图片作为图标\r\n        return `position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                font-size:${this.arrowSize}px;\r\n                background: url('${this.getArrow(index)[0]}') center no-repeat;`\r\n      } else { // ---------------------------------------------此时用户使用默认图标或第三方图标库来作为图标\r\n        return `position: absolute;\r\n                font-size:${this.arrowSize}px;\r\n                top: 50%;\r\n                transform: translateY(-50%);`\r\n      }\r\n    },\r\n    arrowOpenStyle (index) { // -----箭头图标展开时的样式\r\n      if (isNaN(parseInt(this.getArrow(index)[1]))) { // ---如果this.getArrow(index)第二个元素不是纯数字，它一定是与第一个元素代表完全不一样的图片或className。\r\n        if (this.getArrow(index)[0].indexOf('/') > -1) { // -----------this.getArrow中的元素包含“/”说明用户使用自定义图片作为图标\r\n          return `position: absolute;\r\n                  top: 0;\r\n                  left: 0;\r\n                  bottom: 0;\r\n                  right: 0;\r\n                  font-size: ${this.arrowSize}px;\r\n                  background: url('${this.getArrow(index)[1]}') center no-repeat;`\r\n        } else { // ---------------------------------------------此时用户使用默认图标或第三方图标库来作为图标\r\n          return `position: absolute;\r\n                  font-size:${this.arrowSize}px;\r\n                  top: 50%;\r\n                  transform: translateY(-50%);`\r\n        }\r\n      } else { // ---如果this.getArrow(index)第二个元素是纯数字，它表示与第一个元素是一样的图片或className，只是需要顺时针旋转一个角度。\r\n        let transform\r\n        if (this.getArrow(index)[0].indexOf('/') > -1) { // ----如果不是是图片格式旋转\r\n          transform = `transform: rotate(${this.getArrow(index)[1]}deg);`\r\n        } else {\r\n          transform = `transform: translateY(-50%) rotate(${this.getArrow(index)[1]}deg);`\r\n        }\r\n        return `${this.arrowCloseStyle(index)}\r\n                ${transform}`\r\n      }\r\n    },\r\n    arrowCloseClassName (index) { // ----------闭合时箭头图标层的className\r\n      if (!this.getArrow(index)) return ''\r\n      if (this.getArrow(index)[0].indexOf('/') === -1) { // ---如果图标使用的不是图片（图片地址一定含有“/”）\r\n        return this.getArrow(index)[0]\r\n      }\r\n      return ''\r\n    },\r\n    arrowOpenClassName (index) { // ----------展开时箭头图标层的className\r\n      if (!this.getArrow(index)) return ''\r\n      if (isNaN(parseInt(this.getArrow(index)[1])) && this.getArrow(index)[1].toString().indexOf('/') === -1) { // ---如果this.getArrow(index)第二个元素不是纯数字并且图标使用的不是图片（图片地址一定含有“/”）\r\n        return this.getArrow(index)[1]\r\n      } else if (!isNaN(parseInt(this.getArrow(index)[1]))) { // ---this.getArrow(index)第二个元素是纯数字，展开时图标层的className和闭合时图标层的className应该一样，只是在设置style时旋转一定的角度就可以了（角度的度数是this.getArrow(index)）\r\n        return this.getArrow(index)[0]\r\n      }\r\n      return ''\r\n    },\r\n    branchArrowStyle (index) { // ---------------------------------箭头图标的样式-------------------------\r\n      let elIndex = document.getElementById('lt-branch-arrow_' + index)\r\n      let arrowStyle = 'display:inline-block;'\r\n      if (this.arrow === 0) return arrowStyle\r\n      if (elIndex) arrowStyle = elIndex.style.cssText\r\n      if (this.clickBranchIndex !== index || this.animation === false) { // ----禁止当前正处于动画状态的图标改变状态\r\n        if (this.control['lt-branch_' + index][0] === 'open' || this.control['lt-branch_' + index][0] === 'always' || this.control['lt-branch_' + index][0] === 1) { // ----------分支展开或闭合的情况\r\n          arrowStyle += this.arrowOpenStyle(index)\r\n        } else {\r\n          arrowStyle += this.arrowCloseStyle(index)\r\n        }\r\n      }\r\n      return arrowStyle\r\n    },\r\n    branchArrowClassName (index) { // ---------------箭头图标的className(当使用默认图标或第三方图标库时需要设定className)-------------------\r\n      let arrowClass = ''\r\n      if (this.control['lt-branch_' + index][0] === 'open' || this.control['lt-branch_' + index][0] === 'always' || this.control['lt-branch_' + index][0] === 1) {\r\n        arrowClass += this.arrowOpenClassName(index)\r\n      } else {\r\n        arrowClass += this.arrowCloseClassName(index)\r\n      }\r\n\r\n      arrowClass += ' lt-branch-arrow lt-branch-arrow_level_' + (this.depth + 1) // --------添加常规分支图标className和当前级别图标的className\r\n      let theId = index.toString()\r\n      let theChildren = ''\r\n      let theData = ''\r\n\r\n      if (this.depth === 0) { // --获取branch的children值，如果该branch没有children(即没有子分支)，就给它加上lt-branch_level_0样式\r\n        theData = this.listData[index - 1]\r\n        if (theData.children) theChildren = theData.children\r\n      } else {\r\n        theData = this.listData[theId.replace(this.branchLevel, '') - 1]\r\n        if (theData.children) theChildren = theData.children\r\n      }\r\n\r\n      if (theChildren.length === 0) { // ------如果branch没有子分支，就给branch加上 lt-branch-arrow_level_0 样式\r\n        arrowClass += ' lt-branch-arrow_level_0'\r\n      }\r\n      if (theId.toString() === this.clickBranchIndex.toString().substring(0, theId.length)) { // ------判断是否为当前active状态branch的祖先，如果是就加上active状态的className\r\n        arrowClass += ' lt-branch-arrow_level_' + (this.depth + 1) + '_active'\r\n      }\r\n      if (theId.toString() === this.clickBranchIndex.toString()) { // ------判断是否为当前active状态branch，如果是就加上active状态的className\r\n        arrowClass += ' lt-branch-arrow_active'\r\n      }\r\n      /* 用被点击分支index减掉当前分支的index剩余部分包含一个\"-\"，即表示当前分支仅仅比被点击分支高一级（如果高一级以上，那么replace后剩余部分一定会包含多个\"-\"），为了消除特殊index带来的buger，在判断的时候clickBranchIndex和theId前都加了一个字母，并且最后得加一个判断：\"-\"在第一个位置 */\r\n      let str = ('a' + this.clickBranchIndex.toString()).replace(('a' + index.toString()), '')\r\n      if ((str.split('-').length - 1 === 1) && str.indexOf('-') === 0) {\r\n        arrowClass += ' lt-branch-arrow_active_parent'\r\n      }\r\n      return arrowClass\r\n    },\r\n    branchSpanStyle (icon) {\r\n      let theStyle = ''\r\n      if (icon && icon !== '') theStyle = 'left:30px;'\r\n      return `position:relative;\r\n              ${theStyle}`\r\n    },\r\n    branchAnimationStyle (id) { // ----animation的样式\r\n      let theStyle = ''\r\n      if (this.control['lt-branch_' + id][0] === 'open' || this.control['lt-branch_' + id][0] === 'always' || this.control['lt-branch_' + id][0] === 1) {\r\n        theStyle += this.animationOpenStyle\r\n      } else if (this.control['lt-branch_' + id][0] === 'close' || this.control['lt-branch_' + id][0] === 0) {\r\n        theStyle += this.animationCloseStyle\r\n      }\r\n      return theStyle\r\n    },\r\n    branchBoxStyle (id) { // -------------------------------------box的样式-----------------------\r\n      return `margin:0px;\r\n              padding:0px;\r\n              border:0px;\r\n              ${this.boxStyle}`\r\n    },\r\n    // doAnimation (id, parameter) { // --------------------------------展开收缩动画--------------------------------------------\r\n    //   if (this.control['lt-branch_' + id][0] !== 'always') { // --该branch的open值为always时不执行动画，因为该分支不能被闭合\r\n    //     let elAnimation = document.getElementById('lt-branch-animation_' + id)\r\n    //     elAnimation.style.display = 'block'\r\n    //     let elBox = document.getElementById('lt-branch-box_' + id)\r\n    //     let boxH = elBox.offsetHeight\r\n    //     let animationH = elAnimation.offsetHeight\r\n    //     elAnimation.style.overflowY = 'hidden'\r\n    //     /* 发现将overflow设为hidden后，div里的内容和边框的距离会增加， 所以这里暂时将elBox的margin-top设为负值以抵消和边框距离的增加 */\r\n    //     // elBox.style.marginTop = '-15px'\r\n\r\n    //     let addHeight = boxH / 10 // -----每次增加或减小的高度\r\n    //     if (this.control['lt-branch_' + id][0] === 'close' || this.control['lt-branch_' + id][0] === 0) { // ---执行展开动画\r\n    //       elAnimation.style.height = (animationH + addHeight) + 'px'\r\n    //       if (animationH > boxH || animationH === boxH) { // -------如果elAnimation的高大于elBox的高，把elAnimation的style设为animationOpenStyle，同时退出循环\r\n    //         // elAnimation.style.cssText = this.animationOpenStyle\r\n    //         if (parameter) {\r\n    //           this.$emit('sendClickBranchIndex', id)\r\n    //         }\r\n    //         elBox.style.marginTop = ''\r\n    //         this.setControl(id)\r\n    //       } else if (this.control['lt-branch_' + id][0] === 'close' || this.control['lt-branch_' + id][0] === 0) { // ---执行闭合动画\r\n    //         elAnimation.style.height = (animationH + addHeight) + 'px'\r\n    //         setTimeout(() => {\r\n    //           this.doAnimation(id, parameter)\r\n    //         }, this.animationTime)\r\n    //       }\r\n    //     } else {\r\n    //       if (animationH < addHeight || animationH === addHeight) { // -------如果elAnimation的高小于等于addHeight，把elAnimation的style设为animationCloseStyle，同时退出循环\r\n    //         // elAnimation.style.cssText = this.animationCloseStyle\r\n    //         if (parameter) {\r\n    //           this.$emit('sendClickBranchIndex', id)\r\n    //         }\r\n    //         elBox.style.marginTop = ''\r\n    //         this.setControl(id)\r\n    //       } else {\r\n    //         elAnimation.style.height = (animationH - addHeight) + 'px'\r\n    //         setTimeout(() => {\r\n    //           this.doAnimation(id, parameter)\r\n    //         }, this.animationTime)\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // },\r\n    // doRotate (index, direction) { // --------------------图标旋转动画，direction等于1表示顺时针旋转，等于-1表示逆时针旋转\r\n    //   let elarrow = document.getElementById('lt-branch-arrow_' + index)\r\n    //   if (elarrow && this.animation !== false && !isNaN(parseInt(this.getArrow(index)[1])) && this.control['lt-branch_' + index][0] !== 'always') {\r\n    //     let transformarrow = elarrow.style.transform\r\n    //     let translateY = ''\r\n    //     let angle = 0\r\n    //     if (transformarrow.indexOf('translateY(-50%)') > -1) translateY = 'translateY(-50%)'\r\n    //     if (transformarrow.indexOf('rotate') > -1) {\r\n    //       angle = parseInt(transformarrow.split('rotate(')[1].split('deg)')[0])\r\n    //     }\r\n    //     if (!direction) {\r\n    //       if (this.control['lt-branch_' + index][0] === 'close' || this.control['lt-branch_' + index][0] === 0) {\r\n    //         direction = 1\r\n    //       } else if (this.control['lt-branch_' + index][0] === 'open' || this.control['lt-branch_' + index][0] === 1) {\r\n    //         direction = -1\r\n    //       }\r\n    //     }\r\n\r\n    //     let maxAngle = parseInt(this.getArrow(index)[1]) // -----图标旋转所能达到的最大角度，即展开的时候图标需要旋转的角度\r\n    //     let rotateAngle = maxAngle / 10 // -----图标每次旋转的角度\r\n\r\n    //     if (direction === 1) { // ---执行展开动画\r\n    //       elarrow.style.transform = `${translateY} rotate(${angle + rotateAngle}deg)`\r\n    //       if (parseInt(angle + rotateAngle) > maxAngle || parseInt(angle + rotateAngle) === maxAngle) { // -------如果elarrow旋转的角度大于等于maxAngle，把elarrow旋转的角度设为maxAngle，同时退出循环\r\n    //         elarrow.style.transform = `${translateY} rotate(${maxAngle}deg)`\r\n    //         return\r\n    //       }\r\n    //     } else {\r\n    //       elarrow.style.transform = `${translateY} rotate(${angle - rotateAngle}deg)`\r\n    //       if (parseInt(angle - rotateAngle) < 0 || parseInt(angle - rotateAngle) === 0) { // -------如果elarrow旋转的角度小于等于0，把elarrow旋转的角度设为0，同时退出循环（elarrow旋转的角度为0的时候即会到展开时图标的初始状态）\r\n    //         elarrow.style.transform = `${translateY} rotate(0deg)`\r\n    //         return\r\n    //       }\r\n    //     }\r\n\r\n    //     setTimeout(() => {\r\n    //       this.doRotate(index, direction)\r\n    //     }, this.animationTime)\r\n    //   }\r\n    // }\r\n  },\r\n  computed: {\r\n    brancharrowBgStyle () { // ----箭头图标背景层距离左边的距离，控制图标的位置\r\n      let arrowLeft = parseInt(this.arrowLeft)\r\n      if (arrowLeft < 0) return `right: ${Math.abs(arrowLeft)}px;`\r\n      return `left: ${this.indent * this.depth + arrowLeft}px;`\r\n    },\r\n    branchIconStyle () { // ----图标层样式（此图标层非箭头图标层，而是listData上的icon图标）\r\n      return `position:absolute;\r\n              display:inline-block;\r\n              transform:translateY(-50%);\r\n              top: 50%;`\r\n    },\r\n    branchOpenStyle () { // ---branch展开时的样式\r\n      return ''\r\n    },\r\n    branchCloseStyle () { // ---branch闭合时的样式\r\n      return ''\r\n    },\r\n    animationOpenStyle () {\r\n      return `margin:0px;\r\n              padding:0px;\r\n              border:0px;`\r\n    },\r\n    animationCloseStyle () {\r\n      return `margin:0px;\r\n              padding:0px;\r\n              border:0px;\r\n              height:0px;\r\n              display:none;`\r\n    },\r\n    boxStyle () {\r\n      return ''\r\n    }\r\n  },\r\n  created () {\r\n    /*\r\n    将类似于下面 control 的值赋给data中的control，这样的话，就可通过this.control.branchLevel1[0]的值来控制分支branchLevel1的展开或闭合。其中branchLevel1中的1与每个分支中的data-index相同，这样每个分支在control中都有个对应的值来控制和判断它的状态。\r\n    control: {\r\n      lt-branch_1: ['close'],\r\n      lt-branch_2: ['close'],\r\n      lt-branch_3: ['close'],\r\n    }\r\n     */\r\n    for (let n = 1; n < this.listData.length + 1; n++) {\r\n      this.$set(this.control, 'lt-branch_' + (this.branchLevel + n), ['close']) // ----------默认情况，所有branch都为闭合状态(数组第一个元素表示branch的展开或闭合状态['open'为展开，'close'为闭合]\r\n      this.$set(this.control, 'lt-branch-arrow_' + (this.branchLevel + n), 'show') // ----------默认情况，所有arrow都为显示状态('show'为显示，'hidden'为隐藏)\r\n\r\n      if (this.open === 1) {\r\n        this.$set(this.control, 'lt-branch_' + (this.branchLevel + n), ['open']) // ----------当open值为1时，所有branch都为展开状态\r\n      } else if (typeof this.open === 'object') {\r\n        /* 当open为数组时，根据当前分支所处级别以及open中与该级别对应的元素来确定当前分支是“open”、“close”还是“always”状态。其中一级分支状态对应open第一个元素值， 二级分支状态对应open第二个元素值，以此类推。如果open长度不够，那当前级别的分支状态对应open最后一个元素的值 */\r\n        if (this.open.length > this.depth + 1 || this.open.length === this.depth + 1) {\r\n          this.$set(this.control, 'lt-branch_' + (this.branchLevel + n), [this.open[this.depth]])\r\n        } else {\r\n          this.$set(this.control, 'lt-branch_' + (this.branchLevel + n), [this.open[this.open.length - 1]])\r\n        }\r\n      }\r\n      if (this.openOnly === 1 && this.control['lt-branch_' + (this.branchLevel + n)][0] !== 'always') {\r\n        this.$set(this.control, 'lt-branch_' + (this.branchLevel + n), ['close'])\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n@import url(\"./arrow/iconfont.css\");\r\n\r\n.iconfont {\r\n    font-family:\"iconfont\" !important;\r\n    font-style:normal;\r\n    font-weight: normal;\r\n    -webkit-font-smoothing: antialiased;\r\n    -webkit-text-stroke-width: 0.2px;\r\n    -moz-osx-font-smoothing: grayscale;\r\n}\r\n.lt-branch-arrow-bg{\r\n  width: 20px;\r\n  height: 20px;\r\n  position: absolute;\r\n  transform:translateY(-50%);\r\n  top: 50%;\r\n}\r\n.branch-enter-start {\r\n  transform:translateX(-25px);\r\n  opacity: 0;\r\n  transition: all .3s;\r\n}\r\n.branch-enter-end {\r\n  transform:translateX(0px);\r\n  opacity: 1;\r\n}\r\n.branch-leave-start {\r\n  transform:translateX(0px);\r\n  opacity: 1;\r\n  transition: all .3s;\r\n}\r\n.branch-leave-end {\r\n  transform:translateX(-25px);\r\n  opacity: 0;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/lib/branch.vue","module.exports = function escape(url) {\n    if (typeof url !== 'string') {\n        return url\n    }\n    // If url is already wrapped in quotes, remove them\n    if (/^['\"].*['\"]$/.test(url)) {\n        url = url.slice(1, -1);\n    }\n    // Should url be wrapped?\n    // See https://drafts.csswg.org/css-values-3/#urls\n    if (/[\"'() \\t\\n]/.test(url)) {\n        return '\"' + url.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n') + '\"'\n    }\n\n    return url\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_css-loader@0.28.11@css-loader/lib/url/escape.js\n// module id = 352\n// module chunks = 0 1 2","import myTree from './tree'\r\nconst tree = {\r\n  install (Vue, o) {\r\n    if (typeof window !== 'undefined' && window.Vue) {\r\n      Vue = window.Vue\r\n    }\r\n    const LTree = Vue.extend(myTree)\r\n    const listtree = new LTree({propsData: {\r\n      listData: o.listData,\r\n      open: o.open,\r\n      openOnly: o.openOnly,\r\n      indent: o.indent,\r\n      arrow: o.arrow,\r\n      arrowSize: o.arrowSize,\r\n      arrowLeft: o.arrowLeft,\r\n      animation: o.animation,\r\n      eventArea: o.eventArea\r\n    }})\r\n    setTimeout(() => {\r\n      listtree.$mount('.listtree')\r\n    }, 0)\r\n  }\r\n}\r\nexport default tree\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/index.js","function injectStyle (ssrContext) {\n  require(\"!!vue-loader/node_modules/vue-style-loader!css-loader?minimize!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b69eafe4\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=styles&index=0!./tree.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./tree.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./tree.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b69eafe4\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=template&index=0!./tree.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/tree.vue\n// module id = 354\n// module chunks = 0 1 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/_css-loader@0.28.11@css-loader/index.js?minimize!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b69eafe4\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=styles&index=0!./tree.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/_vue-style-loader@3.1.2@vue-style-loader/lib/addStylesClient.js\")(\"4a6dd837\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-style-loader@3.1.2@vue-style-loader!./node_modules/_css-loader@0.28.11@css-loader?minimize!./node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-b69eafe4\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=styles&index=0!./src/lib/tree.vue\n// module id = 355\n// module chunks = 0 1 2","exports = module.exports = require(\"../../node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"a,a:hover{color:#000;text-decoration:none}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_css-loader@0.28.11@css-loader?minimize!./node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-b69eafe4\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=styles&index=0!./src/lib/tree.vue\n// module id = 356\n// module chunks = 0 1 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/_css-loader@0.28.11@css-loader/index.js?minimize!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-00086115\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=styles&index=0!./branch.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/_vue-style-loader@3.1.2@vue-style-loader/lib/addStylesClient.js\")(\"21bad3e4\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-style-loader@3.1.2@vue-style-loader!./node_modules/_css-loader@0.28.11@css-loader?minimize!./node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-00086115\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=styles&index=0!./src/lib/branch.vue\n// module id = 357\n// module chunks = 0 1 2","exports = module.exports = require(\"../../node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../node_modules/_css-loader@0.28.11@css-loader/index.js?minimize!./arrow/iconfont.css\"), \"\");\n\n// module\nexports.push([module.id, \".iconfont{font-family:iconfont!important;font-style:normal;font-weight:400;-webkit-font-smoothing:antialiased;-webkit-text-stroke-width:.2px;-moz-osx-font-smoothing:grayscale}.lt-branch-arrow-bg{width:20px;height:20px;position:absolute;transform:translateY(-50%);top:50%}.branch-enter-start{transform:translateX(-25px);opacity:0;transition:all .3s}.branch-enter-end,.branch-leave-start{transform:translateX(0);opacity:1}.branch-leave-start{transition:all .3s}.branch-leave-end{transform:translateX(-25px);opacity:0}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_css-loader@0.28.11@css-loader?minimize!./node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-00086115\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=styles&index=0!./src/lib/branch.vue\n// module id = 358\n// module chunks = 0 1 2","var escape = require(\"../../../node_modules/_css-loader@0.28.11@css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@font-face{font-family:iconfont;src:url(\" + escape(require(\"./iconfont.eot?t=1530402100306\")) + \");src:url(\" + escape(require(\"./iconfont.eot?t=1530402100306\")) + \"#iefix) format(\\\"embedded-opentype\\\"),url(\\\"data:application/x-font-woff;charset=utf-8;base64,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\\\") format(\\\"woff\\\"),url(\" + escape(require(\"./iconfont.ttf?t=1530402100306\")) + \") format(\\\"truetype\\\"),url(\" + escape(require(\"./iconfont.svg?t=1530402100306\")) + \"#iconfont) format(\\\"svg\\\")}.iconfont{font-family:iconfont!important;font-size:16px;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-sanjiao3:before{content:\\\"\\\\E600\\\"}.icon-shousuojiahao:before{content:\\\"\\\\E627\\\"}.icon-shousuojianhao:before{content:\\\"\\\\E628\\\"}.icon-wenjianjia:before{content:\\\"\\\\E663\\\"}.icon-tongxunguanlizhankai:before{content:\\\"\\\\E655\\\"}.icon-tongxunguanli:before{content:\\\"\\\\E656\\\"}.icon-wenjianjia1:before{content:\\\"\\\\E67F\\\"}.icon-wenjianjiafolder80:before{content:\\\"\\\\E743\\\"}.icon-wenjianjiashouqi:before{content:\\\"\\\\E653\\\"}.icon-wenjianjiazhankai:before{content:\\\"\\\\E654\\\"}.icon-jiantou12:before{content:\\\"\\\\E603\\\"}.icon-jianhao:before{content:\\\"\\\\E606\\\"}.icon-jiahao2:before{content:\\\"\\\\E648\\\"}.icon-yousanjiao:before{content:\\\"\\\\E629\\\"}.icon-jiajianchengchu-:before{content:\\\"\\\\E61C\\\"}.icon-jiajianchengchu-1:before{content:\\\"\\\\E61D\\\"}.icon-jiahao:before{content:\\\"\\\\E616\\\"}.icon-jianhao1:before{content:\\\"\\\\E617\\\"}.icon-sanjiao3-copy:before{content:\\\"\\\\E7E1\\\"}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_css-loader@0.28.11@css-loader?minimize!./src/lib/arrow/iconfont.css\n// module id = 359\n// module chunks = 0 1 2","module.exports = __webpack_public_path__ + \"iconfont.ttf?3fd9bbb39ea5fcd2e6e03f30a745e88e\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/arrow/iconfont.ttf?t=1530402100306\n// module id = 360\n// module chunks = 0 1 2","module.exports = __webpack_public_path__ + \"iconfont.svg?5acc98856fb3b59d18bdd51df00c3819\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/arrow/iconfont.svg?t=1530402100306\n// module id = 361\n// module chunks = 0 1 2","module.exports = {\"arrow1\":[\"iconfont icon-jiantou12\",45],\"arrow2\":[\"iconfont icon-sanjiao3-copy\",90],\"arrow3\":[\"iconfont icon-yousanjiao\",90],\"arrow4\":[\"iconfont icon-yousanjiao\",\"iconfont icon-sanjiao3\"],\"arrow5\":[\"iconfont icon-wenjianjia\",\"iconfont icon-wenjianjiafolder80\"],\"arrow6\":[\"iconfont icon-wenjianjiashouqi\",\"iconfont icon-wenjianjiazhankai\"],\"arrow7\":[\"iconfont icon-tongxunguanli\",\"iconfont icon-tongxunguanlizhankai\"],\"arrow8\":[\"iconfont icon-jiahao\",\"iconfont icon-jianhao1\"],\"arrow9\":[\"iconfont icon-shousuojiahao\",\"iconfont icon-shousuojianhao\"],\"arrow10\":[\"iconfont icon-jiajianchengchu-1\",\"iconfont icon-jiajianchengchu-\"]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/arrow.json\n// module id = 362\n// module chunks = 0 1 2","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',_vm._l((_vm.listData),function(item,index){return _c('div',{key:index},[_c('div',{class:_vm.branchClassName(_vm.branchLevel+(index+1)),style:(_vm.branchStyle(_vm.branchLevel+(index+1))),attrs:{\"id\":'lt-branch_'+(_vm.branchLevel+(index+1)),\"data-index\":_vm.branchLevel+(index+1)},on:{\"click\":function($event){$event.preventDefault();_vm.clickBranch(_vm.branchLevel+(index+1), item.parameter, 'line')},\"mouseover\":function($event){$event.preventDefault();_vm.MouseOverBranch(item.parameter, 'line')}}},[(_vm.getArrow(_vm.branchLevel+(index+1))&&item.children&&item.children.length>0)?_c('div',{staticClass:\"lt-branch-arrow-bg\",style:(_vm.brancharrowBgStyle),attrs:{\"id\":'lt-branch-arrow-bg_'+(_vm.branchLevel+(index+1))}},[((_vm.control['lt-branch-arrow_'+(_vm.branchLevel+(index+1))]==='show')||(item.arrow!==undefined&&item.arrow.length===2))?_c('div',{class:_vm.branchArrowClassName(_vm.branchLevel+(index+1)),style:(_vm.branchArrowStyle(_vm.branchLevel+(index+1))),attrs:{\"id\":'lt-branch-arrow_'+(_vm.branchLevel+(index+1))}}):_vm._e()]):_vm._e(),_vm._v(\" \"),(item.icon&&item.icon!=='')?_c('div',{class:item.icon+' lt-branch-icon',style:(_vm.branchIconStyle),attrs:{\"id\":'lt-branch-icon_'+(_vm.branchLevel+(index+1))}}):_vm._e(),_vm._v(\" \"),_c('span',{style:(_vm.branchSpanStyle(item.icon)),on:{\"click\":function($event){$event.preventDefault();_vm.clickBranch(_vm.branchLevel+(index+1), item.parameter, 'content')},\"mouseover\":function($event){$event.preventDefault();_vm.MouseOverBranch(item.parameter, 'content')}}},[_vm._v(_vm._s(item.name))])]),_vm._v(\" \"),(item.children&&item.children.length>0)?_c('div',{style:(_vm.branchAnimationStyle(_vm.branchLevel+(index+1))),attrs:{\"id\":'lt-branch-animation_'+(_vm.branchLevel+(index+1))}},[_c('div',{style:(_vm.branchBoxStyle(_vm.branchLevel+(index+1), item.children)),attrs:{\"id\":'lt-branch-box_'+(_vm.branchLevel+(index+1))}},[(item.children&&item.children.length>0)?_c('branch',{attrs:{\"listData\":item.children,\"open\":_vm.open,\"openOnly\":_vm.openOnly,\"indent\":_vm.indent,\"arrow\":_vm.arrow,\"arrowLeft\":_vm.arrowLeft,\"arrowSize\":_vm.arrowSize,\"animation\":_vm.animation,\"eventArea\":_vm.eventArea,\"clickBranchIndex\":_vm.clickBranchIndex,\"branchLevel\":_vm.branchLevel+(index+1)+'-',\"depth\":_vm.depth+1},on:{\"sendClickBranchIndex\":_vm.getClickBranchIndex}}):_vm._e()],1)]):_vm._e()])}))}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-00086115\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/lib/branch.vue\n// module id = 363\n// module chunks = 0 1 2","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('branch',{attrs:{\"listData\":_vm.listData,\"open\":_vm.open,\"openOnly\":_vm.openOnly,\"indent\":_vm.indent,\"arrow\":_vm.arrow,\"arrowLeft\":_vm.arrowLeft,\"arrowSize\":_vm.arrowSize,\"animation\":_vm.animation,\"eventArea\":_vm.eventArea,\"clickBranchIndex\":_vm.clickBranchIndex},on:{\"sendClickBranchIndex\":_vm.getClickBranchIndex}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-b69eafe4\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/lib/tree.vue\n// module id = 364\n// module chunks = 0 1 2","<template>\r\n  <div id=\"app\">\r\n    <div class=\"listtree\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport Listtree from './lib'\r\nimport listData from './listdata.json'\r\n\r\nVue.use(Listtree, {\r\n  listData,\r\n  arrowSize: 10,\r\n  // arrowLeft: -8,\r\n  open: 1,\r\n  icon: 4\r\n  // animation: false\r\n})\r\nVue.prototype.$listClick = (r) => {\r\n  // console.log(r)\r\n}\r\nexport default {\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/_css-loader@0.28.11@css-loader/index.js?minimize!../node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7b1c19f1\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=styles&index=0!./App.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../node_modules/_vue-style-loader@3.1.2@vue-style-loader/lib/addStylesClient.js\")(\"c5b2dfd2\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-style-loader@3.1.2@vue-style-loader!./node_modules/_css-loader@0.28.11@css-loader?minimize!./node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-7b1c19f1\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=styles&index=0!./src/App.vue\n// module id = 368\n// module chunks = 2","exports = module.exports = require(\"../node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_css-loader@0.28.11@css-loader?minimize!./node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-7b1c19f1\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=styles&index=0!./src/App.vue\n// module id = 369\n// module chunks = 2","module.exports = [{\"name\":\"一级目录一\",\"children\":[{\"name\":\"二级目录一\",\"children\":[{\"name\":\"三级目录一\",\"children\":[{\"name\":\"四级目录一\",\"parameter\":14},{\"name\":\"四级目录二\",\"parameter\":15,\"children\":[{\"name\":\"五级目录一\",\"parameter\":\"/abc\",\"children\":[]}]}]},{\"name\":\"三级目录二\",\"parameter\":4,\"children\":[]}]}]},{\"name\":\"一级目录二\",\"parameter\":5,\"children\":[{\"name\":\"二级目录二\",\"parameter\":6,\"children\":[{\"name\":\"三级目录三\",\"parameter\":7},{\"name\":\"三级目录四\",\"parameter\":8}]},{\"name\":\"二级目录三\",\"parameter\":9,\"children\":[{\"name\":\"三级目录X\",\"parameter\":10}]},{\"name\":\"二级目录四\",\"parameter\":11,\"children\":[{\"name\":\"三级目录Y\",\"parameter\":12}]}]},{\"name\":\"一级目录三\",\"parameter\":13,\"children\":[{\"name\":\"二级目录五\",\"parameter\":14,\"children\":[{\"name\":\"三级目录五\",\"children\":[{\"name\":\"四级目录三\",\"children\":[{\"name\":\"52\",\"parameter\":\"/abc\",\"children\":[{\"name\":\"61\",\"children\":[{\"name\":\"71\",\"children\":[{\"name\":\"81\",\"parameter\":\"/abc\"}]}]}]}]}]}]}]}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/listdata.json\n// module id = 370\n// module chunks = 2","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"listtree\"})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-7b1c19f1\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 371\n// module chunks = 2"],"sourceRoot":""}